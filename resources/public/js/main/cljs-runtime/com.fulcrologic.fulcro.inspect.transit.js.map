{"version":3,"sources":["com/fulcrologic/fulcro/inspect/transit.cljs"],"mappings":";AAMA,AAAA;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASI,AAEIG;;AAFb,AAAA,AAAA,AAEQD;AAFR,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAASF,AAGIG;;AAHb,AAAA,AAAA,AAGQD;AAHR,AAAA,AAGiB,AAACE,AAAWD,AAAG,AAACE,AAAQF;;;AAHzC,AAAA,AAAA,AAAA,AAASH,AAIUG;;AAJnB,AAAA,AAAA,AAIcD;AAJd,AAIsB,AAACE,AAAWD;;;AAJlC,AAAA,AAAA,AAASH;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI;AAAT,AAAA,AAAAD;;;AAASA,AAMT,AAAA;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASM,AAEIH;;AAFb,AAAA,AAAA,AAEQD;AAFR,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAASI,AAGIH;;AAHb,AAAA,AAAA,AAGQD;AAHR,AAGgB,AAAA,AACE,AAAKC;AADP,AAAAK,AAEkBC;AAFlB,AAGI,AAAMC;AAAN,AACE,AAAAC,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA;AAAA,AAAA,AAAA;;AADF;;AAHJ;;;AAHhB,AAAA,AAAA,AAASP;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAV,AAAAC,AAAAC,AAASQ;AAAT,AAAA,AAAAP,AAAAF,AAAA;;;AAAA;;;AAAA,AAASU;AAAT,AAAA,AAAAD;;;AAASA,AAUT,AAAA,AAAMQ;AAAN,AACE,AAAA,AAAA,AAACC,AAAOC,AAAwB,AAAAhB,AACA,AAAAM,AAC9B,AAACW;;AAEL,AAAA,AAAMC;AAAN,AACE,AAAA,AAAA,AAACH,AACa,AAAAI;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAUG;AAAV,AAAiB,AAACC,AAAQF,AAAIC;AAC1C,AAACE;;AAEL,AAAA,AAAMC,AAAMC;AAAZ,AACE,AAAMC,AAAO,AAAA,AAAA,AAACC,AAAqB,AAACX;AAApC,AACE,AAACY,AAAOF,AAAOD;;AAEnB,AAAA,AAAMI,AAAOC;AAAb,AACE,AAAMC,AAAO,AAAA,AAAA,AAACC,AAAqB,AAACpB;AAApC,AACE,AAACqB,AAAQF,AAAOD;;AAEpB,AAAA,AAAA,AAAA,AAAAI,AAAaC","names":["this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","com.fulcrologic.fulcro.inspect.transit/ErrorHandler","com.fulcrologic.fulcro.inspect.transit/->ErrorHandler","this","v","cljs.core/ex-message","cljs.core/ex-data","com.fulcrologic.fulcro.inspect.transit/DefaultHandler","com.fulcrologic.fulcro.inspect.transit/->DefaultHandler","e51882","e","js/goog.DEBUG","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","com.fulcrologic.fulcro.inspect.transit/write-handlers","cljs.core.merge","cljs.core/ExceptionInfo","com.fulcrologic.fulcro.algorithms.transit/write-handlers","com.fulcrologic.fulcro.inspect.transit/read-handlers","p__51883","vec__51884","cljs.core.nth","msg","data","cljs.core.ex_info","com.fulcrologic.fulcro.algorithms.transit/read-handlers","com.fulcrologic.fulcro.inspect.transit/read","str","reader","com.fulcrologic.fulcro.algorithms.transit.reader","cognitect.transit/read","com.fulcrologic.fulcro.inspect.transit/write","x","writer","com.fulcrologic.fulcro.algorithms.transit.writer","cognitect.transit/write","cljs.core/PROTOCOL_SENTINEL","com.cognitect.transit.types/UUID"],"sourcesContent":["(ns ^:no-doc com.fulcrologic.fulcro.inspect.transit\n  (:require [cognitect.transit :as t]\n            [com.cognitect.transit.types :as ty]\n            [com.fulcrologic.fulcro.algorithms.transit :as ft]\n            [taoensso.timbre :as log]))\n\n(deftype ErrorHandler []\n  Object\n  (tag [this v] \"js-error\")\n  (rep [this v] [(ex-message v) (ex-data v)])\n  (stringRep [this v] (ex-message v)))\n\n(deftype DefaultHandler []\n  Object\n  (tag [this v] \"unknown\")\n  (rep [this v] (try\n                  (str v)\n                  (catch :default e\n                    (when goog.DEBUG\n                      (log/warn \"Transit was unable to encode a value.\"))\n                    \"UNENCODED VALUE\"))))\n\n(defn write-handlers []\n  (merge {cljs.core/ExceptionInfo (ErrorHandler.)\n          \"default\"               (DefaultHandler.)}\n    (ft/write-handlers)))\n\n(defn read-handlers []\n  (merge\n    {\"js-error\" (fn [[msg data]] (ex-info msg data))}\n    (ft/read-handlers)))\n\n(defn read [str]\n  (let [reader (ft/reader {:handlers (read-handlers)})]\n    (t/read reader str)))\n\n(defn write [x]\n  (let [writer (ft/writer {:handlers (write-handlers)})]\n    (t/write writer x)))\n\n(extend-type ty/UUID IUUID)\n"]}