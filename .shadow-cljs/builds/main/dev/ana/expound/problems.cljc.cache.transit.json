["^ ","~:output",["^ ","~:js","goog.provide('expound.problems');\nexpound.problems.adjust_in = (function expound$problems$adjust_in(form,problem){\nvar in1 = expound.paths.in_with_kps(form,new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(problem),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865).cljs$core$IFn$_invoke$arity$1(problem),cljs.core.PersistentVector.EMPTY);\nvar in2 = (function (){var paths = expound.paths.paths_to_value(form,new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(problem),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(paths))){\nreturn cljs.core.first(paths);\n} else {\nreturn null;\n}\n})();\nvar in3 = (function (){try{return expound.paths.in_with_kps(form,cljs.spec.alpha.unform(cljs.core.last(new cljs.core.Keyword(null,\"via\",\"via\",-1904457336).cljs$core$IFn$_invoke$arity$1(problem)),new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(problem)),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865).cljs$core$IFn$_invoke$arity$1(problem),cljs.core.PersistentVector.EMPTY);\n}catch (e48520){var _e = e48520;\nreturn null;\n}})();\nvar new_in = (cljs.core.truth_(in1)?in1:(cljs.core.truth_(in2)?in2:(cljs.core.truth_(in3)?in3:(cljs.core.truth_((function (){var or__4126__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.list(new cljs.core.Symbol(null,\"apply\",\"apply\",-1334050276,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397).cljs$core$IFn$_invoke$arity$1(problem));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar G__48527 = cljs.core.first(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem));\nvar fexpr__48526 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),null], null), null);\nreturn (fexpr__48526.cljs$core$IFn$_invoke$arity$1 ? fexpr__48526.cljs$core$IFn$_invoke$arity$1(G__48527) : fexpr__48526.call(null,G__48527));\n}\n})())?new cljs.core.Keyword(null,\"in\",\"in\",-1531184865).cljs$core$IFn$_invoke$arity$1(problem):null\n))));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,new cljs.core.Keyword(\"expound\",\"in\",\"expound/in\",-1900412298),new_in);\n});\nexpound.problems.adjust_path = (function expound$problems$adjust_path(failure,problem){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,new cljs.core.Keyword(\"expound\",\"path\",\"expound/path\",-1026376555),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),failure))?cljs.core.vec(cljs.core.rest(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem))):new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem)));\n});\nexpound.problems.add_spec = (function expound$problems$add_spec(spec,problem){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),spec);\n});\nexpound.problems.fix_via = (function expound$problems$fix_via(spec,problem){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(spec,cljs.core.first(new cljs.core.Keyword(null,\"via\",\"via\",-1904457336).cljs$core$IFn$_invoke$arity$1(problem)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,new cljs.core.Keyword(\"expound\",\"via\",\"expound/via\",-595987777),new cljs.core.Keyword(null,\"via\",\"via\",-1904457336).cljs$core$IFn$_invoke$arity$1(problem));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,new cljs.core.Keyword(\"expound\",\"via\",\"expound/via\",-595987777),cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null),new cljs.core.Keyword(null,\"via\",\"via\",-1904457336).cljs$core$IFn$_invoke$arity$1(problem)));\n}\n});\nexpound.problems.missing_spec_QMARK_ = (function expound$problems$missing_spec_QMARK_(_failure,problem){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"no method\",new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759).cljs$core$IFn$_invoke$arity$1(problem));\n});\nexpound.problems.not_in_set_QMARK_ = (function expound$problems$not_in_set_QMARK_(_failure,problem){\nreturn cljs.core.set_QMARK_(new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397).cljs$core$IFn$_invoke$arity$1(problem));\n});\nexpound.problems.fspec_exception_failure_QMARK_ = (function expound$problems$fspec_exception_failure_QMARK_(failure,problem){\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),failure)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547),failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.list(new cljs.core.Symbol(null,\"apply\",\"apply\",-1334050276,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397).cljs$core$IFn$_invoke$arity$1(problem))));\n});\nexpound.problems.fspec_ret_failure_QMARK_ = (function expound$problems$fspec_ret_failure_QMARK_(failure,problem){\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),failure)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547),failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.last(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem)))));\n});\nexpound.problems.fspec_fn_failure_QMARK_ = (function expound$problems$fspec_fn_failure_QMARK_(failure,problem){\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),failure)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547),failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),cljs.core.last(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem)))));\n});\nexpound.problems.check_ret_failure_QMARK_ = (function expound$problems$check_ret_failure_QMARK_(failure,problem){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547),failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.last(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem)))));\n});\nexpound.problems.check_fn_failure_QMARK_ = (function expound$problems$check_fn_failure_QMARK_(failure,problem){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547),failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),cljs.core.last(new cljs.core.Keyword(null,\"path\",\"path\",-188191168).cljs$core$IFn$_invoke$arity$1(problem)))));\n});\nexpound.problems.missing_key_QMARK_ = (function expound$problems$missing_key_QMARK_(_failure,problem){\nvar pred = new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397).cljs$core$IFn$_invoke$arity$1(problem);\nreturn ((cljs.core.seq_QMARK_(pred)) && (((2) < cljs.core.count(pred))) && (cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"expound.spec\",\"contains-key-pred\",\"expound.spec/contains-key-pred\",-989075236),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pred,(2)))));\n});\nexpound.problems.insufficient_input_QMARK_ = (function expound$problems$insufficient_input_QMARK_(_failure,problem){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"Insufficient input\",null], null), null),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759).cljs$core$IFn$_invoke$arity$1(problem));\n});\nexpound.problems.extra_input_QMARK_ = (function expound$problems$extra_input_QMARK_(_failure,problem){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"Extra input\",null], null), null),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759).cljs$core$IFn$_invoke$arity$1(problem));\n});\nexpound.problems.ptype = (function expound$problems$ptype(failure,problem,skip_locations_QMARK_){\nif(cljs.core.truth_(new cljs.core.Keyword(\"expound.spec.problem\",\"type\",\"expound.spec.problem/type\",-862044659).cljs$core$IFn$_invoke$arity$1(problem))){\nreturn new cljs.core.Keyword(\"expound.spec.problem\",\"type\",\"expound.spec.problem/type\",-862044659).cljs$core$IFn$_invoke$arity$1(problem);\n} else {\nif(((cljs.core.not(skip_locations_QMARK_)) && (expound.problems.fspec_ret_failure_QMARK_(failure,problem)))){\nreturn new cljs.core.Keyword(\"expound.problem\",\"fspec-ret-failure\",\"expound.problem/fspec-ret-failure\",1192937934);\n} else {\nif(expound.problems.fspec_exception_failure_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"fspec-exception-failure\",\"expound.problem/fspec-exception-failure\",-398312942);\n} else {\nif(((cljs.core.not(skip_locations_QMARK_)) && (expound.problems.fspec_fn_failure_QMARK_(failure,problem)))){\nreturn new cljs.core.Keyword(\"expound.problem\",\"fspec-fn-failure\",\"expound.problem/fspec-fn-failure\",-814692716);\n} else {\nif(((cljs.core.not(skip_locations_QMARK_)) && (expound.problems.check_ret_failure_QMARK_(failure,problem)))){\nreturn new cljs.core.Keyword(\"expound.problem\",\"check-ret-failure\",\"expound.problem/check-ret-failure\",1795987483);\n} else {\nif(((cljs.core.not(skip_locations_QMARK_)) && (expound.problems.check_fn_failure_QMARK_(failure,problem)))){\nreturn new cljs.core.Keyword(\"expound.problem\",\"check-fn-failure\",\"expound.problem/check-fn-failure\",443478179);\n} else {\nif(expound.problems.insufficient_input_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"insufficient-input\",\"expound.problem/insufficient-input\",1437497436);\n} else {\nif(expound.problems.extra_input_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"extra-input\",\"expound.problem/extra-input\",2043170217);\n} else {\nif(expound.problems.not_in_set_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"not-in-set\",\"expound.problem/not-in-set\",14506077);\n} else {\nif(expound.problems.missing_key_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"missing-key\",\"expound.problem/missing-key\",-750683408);\n} else {\nif(expound.problems.missing_spec_QMARK_(failure,problem)){\nreturn new cljs.core.Keyword(\"expound.problem\",\"missing-spec\",\"expound.problem/missing-spec\",-1439599438);\n} else {\nreturn new cljs.core.Keyword(\"expound.problem\",\"unknown\",\"expound.problem/unknown\",1364832957);\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nexpound.problems.annotate = (function expound$problems$annotate(explain_data){\nvar map__48584 = explain_data;\nvar map__48584__$1 = (((((!((map__48584 == null))))?(((((map__48584.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48584.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48584):map__48584);\nvar problems = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"problems\",\"cljs.spec.alpha/problems\",447400814));\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"value\",\"cljs.spec.alpha/value\",1974786274));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"args\",\"cljs.spec.alpha/args\",1870769783));\nvar ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"ret\",\"cljs.spec.alpha/ret\",1165997503));\nvar fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"fn\",\"cljs.spec.alpha/fn\",408600443));\nvar failure = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592));\nvar spec = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48584__$1,new cljs.core.Keyword(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",1947137578));\nvar caller = (function (){var or__4126__auto__ = new cljs.core.Keyword(\"clojure.spec.test.alpha\",\"caller\",\"clojure.spec.test.alpha/caller\",-706822212).cljs$core$IFn$_invoke$arity$1(explain_data);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(\"orchestra.spec.test\",\"caller\",\"orchestra.spec.test/caller\",-686413347).cljs$core$IFn$_invoke$arity$1(explain_data);\n}\n})();\nvar form = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),failure))?value:((cljs.core.contains_QMARK_(explain_data,new cljs.core.Keyword(\"cljs.spec.alpha\",\"ret\",\"cljs.spec.alpha/ret\",1165997503)))?ret:((cljs.core.contains_QMARK_(explain_data,new cljs.core.Keyword(\"cljs.spec.alpha\",\"args\",\"cljs.spec.alpha/args\",1870769783)))?args:((cljs.core.contains_QMARK_(explain_data,new cljs.core.Keyword(\"cljs.spec.alpha\",\"fn\",\"cljs.spec.alpha/fn\",408600443)))?fn:(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid explain-data\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"explain-data\",\"explain-data\",-1124944340),explain_data], null))})()\n))));\nvar problems_SINGLEQUOTE_ = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(expound.problems.adjust_in,form),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(expound.problems.adjust_path,failure),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(expound.problems.add_spec,spec),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partial.cljs$core$IFn$_invoke$arity$2(expound.problems.fix_via,spec),(function (p1__48582_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__48582_SHARP_,new cljs.core.Keyword(\"expound\",\"form\",\"expound/form\",-264680632),form);\n}),(function (p1__48583_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__48583_SHARP_,new cljs.core.Keyword(\"expound.spec.problem\",\"type\",\"expound.spec.problem/type\",-862044659),expound.problems.ptype(failure,p1__48583_SHARP_,false));\n})], 0)),problems);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(explain_data,new cljs.core.Keyword(\"expound\",\"form\",\"expound/form\",-264680632),form,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"expound\",\"caller\",\"expound/caller\",-503638870),caller,new cljs.core.Keyword(\"expound\",\"problems\",\"expound/problems\",1257773984),problems_SINGLEQUOTE_], 0));\n});\nexpound.problems.type = expound.problems.ptype;\nexpound.problems.value_in = expound.paths.value_in;\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","expound/problems.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",30,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",["~$type"]],"~:name","~$expound.problems","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$expound.paths","^Q","~$paths","^Q","^?","^@","~$s","^@","~$cljs.core","^S","~$goog","^T","^@","^@"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S","^?","^@","~$s","^@","^@","^@"],"~:form",["~#list",["~$ns","^L",["^Z",["^V",["^Q","~:as","^R"],["^?","^10","~$s"]]],["^Z",["~:refer-clojure","~:exclude",["^J"]]]]],"~:flags",["^ ","^V",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^Q","^@"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","expound/problems.cljc"],"~:compiled-at",1609109799617,"~:resource-name","expound/problems.cljc","~:warnings",[],"~:source","(ns ^:no-doc expound.problems\n  (:require [expound.paths :as paths]\n            [clojure.spec.alpha :as s])\n  (:refer-clojure :exclude [type]))\n\n;; can simplify when \n;; https://dev.clojure.org/jira/browse/CLJ-2192 or\n;; https://dev.clojure.org/jira/browse/CLJ-2258 are fixed\n(defn- adjust-in [form problem]\n  ;; Three strategies for finding the value...\n  (let [;; 1. Find the original value\n        in1 (paths/in-with-kps form (:val problem) (:in problem) [])\n\n        ;; 2. If value is unique, just find that, ignoring the 'in' path\n        in2 (let [paths (paths/paths-to-value form (:val problem) [] [])]\n              (if (= 1 (count paths))\n                (first paths)\n                nil))\n\n        ;; 3. Find the unformed value (if there is an unformer)\n        in3 (try\n              (paths/in-with-kps form\n                                 (s/unform (last (:via problem)) (:val problem))\n                                 (:in problem) [])\n              ;; The unform fails if there is no unformer\n              ;; and the unform function could throw any type of\n              ;; exception (it's provided by user)\n              (catch #?(:cljs :default\n                        :clj java.lang.Throwable) _e\n                nil))\n        new-in (cond in1\n                     in1\n\n                     in2\n                     in2\n\n                     in3\n                     in3\n\n                     (or (= '(apply fn) (:pred problem))\n                         (#{:ret} (first (:path problem))))\n                     (:in problem)\n\n                     :else\n                     nil)]\n\n    (assoc problem\n           :expound/in\n           new-in)))\n\n(defn- adjust-path [failure problem]\n  (assoc problem :expound/path\n         (if (= :instrument failure)\n           (vec (rest (:path problem)))\n           (:path problem))))\n\n(defn- add-spec [spec problem]\n  (assoc problem :spec spec))\n\n;; via is slightly different when using s/assert\n(defn fix-via [spec problem]\n  (if (= spec (first (:via problem)))\n    (assoc problem :expound/via (:via problem))\n    (assoc problem :expound/via (into [spec] (:via problem)))))\n\n(defn ^:private missing-spec? [_failure problem]\n  (= \"no method\" (:reason problem)))\n\n(defn ^:private not-in-set? [_failure problem]\n  (set? (:pred problem)))\n\n(defn ^:private fspec-exception-failure? [failure problem]\n  (and (not= :instrument failure)\n       (not= :check-failed failure)\n       (= '(apply fn) (:pred problem))))\n\n(defn ^:private fspec-ret-failure? [failure problem]\n  (and\n   (not= :instrument failure)\n   (not= :check-failed failure)\n   (= :ret (last (:path problem)))))\n\n(defn ^:private fspec-fn-failure? [failure problem]\n  (and\n   (not= :instrument failure)\n   (not= :check-failed failure)\n   (= :fn (last (:path problem)))))\n\n(defn ^:private check-ret-failure? [failure problem]\n  (and\n   (= :check-failed failure)\n   (= :ret (last (:path problem)))))\n\n(defn ^:private check-fn-failure? [failure problem]\n  (and (= :check-failed failure)\n       (= :fn (last (:path problem)))))\n\n(defn ^:private missing-key? [_failure problem]\n  (let [pred (:pred problem)]\n    (and (seq? pred)\n         (< 2 (count pred))\n         (s/valid?\n          :expound.spec/contains-key-pred\n          (nth pred 2)))))\n\n(defn ^:private insufficient-input? [_failure problem]\n  (contains? #{\"Insufficient input\"} (:reason problem)))\n\n(defn ^:private extra-input? [_failure problem]\n  (contains? #{\"Extra input\"} (:reason problem)))\n\n(defn ^:private ptype [failure problem skip-locations?]\n  (cond\n    (:expound.spec.problem/type problem)\n    (:expound.spec.problem/type problem)\n\n    ;; This is really a location of a failure, not a failure type\n    (and (not skip-locations?) (fspec-ret-failure? failure problem))\n    :expound.problem/fspec-ret-failure\n\n    (fspec-exception-failure? failure problem)\n    :expound.problem/fspec-exception-failure\n\n    ;; This is really a location of a failure, not a failure type\n    ;; (compare to check-fn-failure, which is also an fn failure, but\n    ;; at a different location)\n    (and (not skip-locations?) (fspec-fn-failure? failure problem))\n    :expound.problem/fspec-fn-failure\n\n    ;; This is really a location of a failure, not a failure type\n    (and (not skip-locations?) (check-ret-failure? failure problem))\n    :expound.problem/check-ret-failure\n\n    ;; This is really a location of a failure, not a failure type\n    (and (not skip-locations?) (check-fn-failure? failure problem))\n    :expound.problem/check-fn-failure\n\n    (insufficient-input? failure problem)\n    :expound.problem/insufficient-input\n\n    (extra-input? failure problem)\n    :expound.problem/extra-input\n\n    (not-in-set? failure problem)\n    :expound.problem/not-in-set\n\n    (missing-key? failure problem)\n    :expound.problem/missing-key\n\n    (missing-spec? failure problem)\n    :expound.problem/missing-spec\n\n    :else\n    :expound.problem/unknown))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;; public ;;;;;;;;;;;;;;;;;;;;;;;;;\n\n\n(defn annotate [explain-data]\n  (let [{::s/keys [problems value args ret fn failure spec]} explain-data\n        caller (or (:clojure.spec.test.alpha/caller explain-data) (:orchestra.spec.test/caller explain-data))\n        form (if (not= :instrument failure)\n               value\n               (cond\n                 (contains? explain-data ::s/ret) ret\n                 (contains? explain-data ::s/args) args\n                 (contains? explain-data ::s/fn) fn\n                 :else (throw (ex-info \"Invalid explain-data\" {:explain-data explain-data}))))\n        problems' (map (comp (partial adjust-in form)\n                             (partial adjust-path failure)\n                             (partial add-spec spec)\n                             (partial fix-via spec)\n                             #(assoc % :expound/form form)\n                             #(assoc % :expound.spec.problem/type (ptype failure % false)))\n                       problems)]\n\n    (-> explain-data\n        (assoc :expound/form form\n               :expound/caller caller\n               :expound/problems problems'))))\n\n(def type ptype)\n\n;; Must keep this function here because\n;; spell-spec uses it\n;; https://github.com/bhauman/spell-spec/blob/48ea2ca544f02b04a73dc42a91aa4876dcc5fc95/src/spell_spec/expound.cljc#L20\n(def value-in paths/value-in)\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["expound.problems/adjust-in","form","problem","in1","expound.paths/in-with-kps","in2","paths","expound.paths/paths-to-value","cljs.core._EQ_","cljs.core/count","cljs.core/first","in3","e48520","cljs.spec.alpha/unform","cljs.core/last","_e","new-in","or__4126__auto__","G__48527","fexpr__48526","cljs.core.assoc","expound.problems/adjust-path","failure","cljs.core/vec","cljs.core/rest","expound.problems/add-spec","spec","expound.problems/fix-via","cljs.core.into","expound.problems/missing-spec?","_failure","expound.problems/not-in-set?","cljs.core/set?","expound.problems/fspec-exception-failure?","cljs.core.not_EQ_","expound.problems/fspec-ret-failure?","expound.problems/fspec-fn-failure?","expound.problems/check-ret-failure?","expound.problems/check-fn-failure?","expound.problems/missing-key?","pred","cljs.core/seq?","cljs.spec.alpha.valid_QMARK_","cljs.core.nth","expound.problems/insufficient-input?","cljs.core/contains?","expound.problems/extra-input?","expound.problems/ptype","skip-locations?","cljs.core/not","expound.problems/annotate","explain-data","map__48584","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","problems","value","args","ret","fn","caller","cljs.core.ex_info","problems'","cljs.core.map","p1__48582#","p1__48583#","cljs.core.comp","cljs.core.partial","expound.problems/type","expound.problems/value-in","expound.paths/value-in"]],"~:used-vars",["^I",["~$cljs.core/rest","~$expound.problems/fspec-fn-failure?","~$cljs.core/=","~$cljs.core/count","~$cljs.core/last","~$cljs.core/not=","~$expound.problems/not-in-set?","~$expound.problems/type","~$cljs.core/contains?","~$cljs.core/into","~$expound.paths/value-in","~$expound.problems/missing-spec?","~$expound.problems/adjust-in","~$expound.problems/adjust-path","~$expound.problems/fspec-exception-failure?","~$cljs.core/set?","~$cljs.core/nth","~$cljs.spec.alpha/valid?","~$expound.problems/fix-via","~$cljs.core/vec","~$expound.problems/fspec-ret-failure?","~$cljs.core/not","~$expound.problems/insufficient-input?","~$cljs.core/assoc","~$expound.problems/extra-input?","~$expound.problems/annotate","~$expound.problems/check-ret-failure?","~$expound.problems/ptype","~$cljs.core/first","~$cljs.core/seq?","~$expound.problems/missing-key?","~$expound.problems/add-spec","~$expound.problems/value-in","~$expound.problems/check-fn-failure?"]]],"~:cache-keys",["~#cmap",[["^17","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^17","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S"]]],["^17","cljs/spec/gen/alpha.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S","~$goog.Uri"]]],["^17","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","~$goog.array","~$goog.asserts"]]],["^17","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^17","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2E"]]],["^17","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B"]]],["^17","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S","^Q","^@"]]],["^17","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B"]]],"~:SHADOW-TIMESTAMP",[1609109508000,1609109508000,1609109508000],["^17","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","~$goog.reflect"]]],["^17","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","~$goog.html.trustedtypes","^2H","^2I","^2J","^2K"]]],["^17","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","~$goog.html.SafeUrl","^2J","^2K","^2E"]]],["^17","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2O","^2G","~$goog.html.uncheckedconversions","^2J","^2E"]]],["^17","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S","^@","~$expound.util"]]],["^17","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S"]]],["^17","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^17","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","~$goog.dom.TagName","~$goog.dom.tags","^2S","^2T","~$goog.html.SafeStyleSheet","^2O","^2G","^2N","^2H","^2I","~$goog.labs.userAgent.browser","^2D","^2J","^2K","^2E"]]],["^17","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2D"]]],["^17","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^17","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^17","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","cljs/spec/alpha.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S","^2D","~$clojure.walk","^D","~$clojure.string"]]],["^17","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",[]]],["^17","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2D"]]],["^17","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^S","^33","~$goog.string.StringBuffer"]]],["^17","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","~$goog.dom.safe","^2U","^2J","^2E"]]],["^17","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2E"]]],["^17","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","^2Q","~$goog.math"]]],["^17","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","^2R","^2S","^2T","^2[","^2O","^2G","^2J","^2E"]]],["^17","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T"]]],["^17","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","~$goog.math.Long","~$goog.math.Integer","^33","^2D","^2A","^2@","^3;"]]],["^17","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","^2N","^2J","^2K"]]],["^17","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","^2T","^2D","^2J","^2K","^2E"]]],["^17","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2M"]]],["^17","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2A","^2B","^33"]]],["^17","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^I",[]],"^2>",["^T","^2B","^2K"]]]]],"~:clj-info",["^ ","jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/spec/alpha.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1601468675000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1598537012000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1598537012000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1594291029000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1598537012000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1598537012000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1594291036000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1598537012000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/spec/gen/alpha.cljc",1609109508000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1609109508000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","expound/problems.cljc","^7",1,"^8",14,"^9",1,"^:",30,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",["^J"]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^?","^@","~$s","^@","^S","^S","^T","^T","^@","^@"],"^U",["^I",["^V"]],"^W",null,"~:defs",["^ ","~$check-fn-failure?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","expound/problems.cljc","^7",94,"^8",17,"^9",94,"^:",34,"~:private",true,"~:arglists",["^Z",["~$quote",["^Z",[["~$failure","~$problem"]]]]]],"^45",true,"^K","^28","^6","expound/problems.cljc","^:",34,"~:method-params",["^Z",[["^48","^49"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",94,"~:ret-tag","~$boolean","^9",94,"~:max-fixed-arity",2,"~:fn-var",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"~$fspec-ret-failure?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",77,"^8",17,"^9",77,"^:",35,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"^45",true,"^K","^1W","^6","expound/problems.cljc","^:",35,"^4:",["^Z",[["^48","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",77,"^4>","^4?","^9",77,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"~$missing-spec?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",66,"^8",17,"^9",66,"^:",30,"^45",true,"^46",["^Z",["^47",["^Z",[["~$_failure","^49"]]]]]],"^45",true,"^K","^1N","^6","expound/problems.cljc","^:",30,"^4:",["^Z",[["^4D","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",66,"^4>","^4?","^9",66,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"~$ptype",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",112,"^8",17,"^9",112,"^:",22,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49","~$skip-locations?"]]]]]],"^45",true,"^K","^22","^6","expound/problems.cljc","^:",22,"^4:",["^Z",[["^48","^49","^4F"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",112,"^4>",["^I",["~$any","~$cljs.core/Keyword"]],"^9",112,"^4@",3,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49","^4F"]]]]]],"~$adjust-in",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",9,"^8",8,"^9",9,"^:",17,"^45",true,"^46",["^Z",["^47",["^Z",[["~$form","^49"]]]]]],"^45",true,"^K","^1O","^6","expound/problems.cljc","^:",17,"^4:",["^Z",[["^4J","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",9,"^4>",["^I",["~$clj","^4G"]],"^9",9,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4J","^49"]]]]]],"~$value-in",["^ ","^K","^27","^6","expound/problems.cljc","^7",187,"^8",1,"^9",187,"^:",14,"^5",["^ ","^6","expound/problems.cljc","^7",187,"^8",6,"^9",187,"^:",14]],"~$adjust-path",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",51,"^8",8,"^9",51,"^:",19,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"^45",true,"^K","^1P","^6","expound/problems.cljc","^:",19,"^4:",["^Z",[["^48","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",51,"^4>",["^I",["^4K","^4G"]],"^9",51,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"~$fix-via",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",61,"^8",7,"^9",61,"^:",14,"^46",["^Z",["^47",["^Z",[["~$spec","^49"]]]]]],"^K","^1U","^6","expound/problems.cljc","^:",14,"^4:",["^Z",[["^4O","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",61,"^4>",["^I",["^4K","^4G"]],"^9",61,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4O","^49"]]]]]],"~$insufficient-input?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",106,"^8",17,"^9",106,"^:",36,"^45",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"^45",true,"^K","^1Y","^6","expound/problems.cljc","^:",36,"^4:",["^Z",[["^4D","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",106,"^4>","^4?","^9",106,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"~$annotate",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",159,"^8",7,"^9",159,"^:",15,"^46",["^Z",["^47",["^Z",[["~$explain-data"]]]]]],"^K","^20","^6","expound/problems.cljc","^:",15,"^4:",["^Z",[["^4R"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",159,"^4>",["^I",["^4K","^4G"]],"^9",159,"^4@",1,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4R"]]]]]],"~$extra-input?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",109,"^8",17,"^9",109,"^:",29,"^45",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"^45",true,"^K","^1[","^6","expound/problems.cljc","^:",29,"^4:",["^Z",[["^4D","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",109,"^4>","^4?","^9",109,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"~$check-ret-failure?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",89,"^8",17,"^9",89,"^:",35,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"^45",true,"^K","^21","^6","expound/problems.cljc","^:",35,"^4:",["^Z",[["^48","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",89,"^4>","^4?","^9",89,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"~$not-in-set?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",69,"^8",17,"^9",69,"^:",28,"^45",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"^45",true,"^K","^1I","^6","expound/problems.cljc","^:",28,"^4:",["^Z",[["^4D","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",69,"^4>","^4?","^9",69,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"^J",["^ ","^K","^1J","^6","expound/problems.cljc","^7",182,"^8",1,"^9",182,"^:",10,"^5",["^ ","^6","expound/problems.cljc","^7",182,"^8",6,"^9",182,"^:",10]],"~$add-spec",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",57,"^8",8,"^9",57,"^:",16,"^45",true,"^46",["^Z",["^47",["^Z",[["^4O","^49"]]]]]],"^45",true,"^K","^26","^6","expound/problems.cljc","^:",16,"^4:",["^Z",[["^4O","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",57,"^4>",["^I",["^4K","^4G"]],"^9",57,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4O","^49"]]]]]],"~$missing-key?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",98,"^8",17,"^9",98,"^:",29,"^45",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"^45",true,"^K","^25","^6","expound/problems.cljc","^:",29,"^4:",["^Z",[["^4D","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",98,"^4>","^4?","^9",98,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^4D","^49"]]]]]],"~$fspec-fn-failure?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",83,"^8",17,"^9",83,"^:",34,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"^45",true,"^K","^1D","^6","expound/problems.cljc","^:",34,"^4:",["^Z",[["^48","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",83,"^4>","^4?","^9",83,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"~$fspec-exception-failure?",["^ ","^44",null,"^5",["^ ","^6","expound/problems.cljc","^7",72,"^8",17,"^9",72,"^:",41,"^45",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]],"^45",true,"^K","^1Q","^6","expound/problems.cljc","^:",41,"^4:",["^Z",[["^48","^49"]]],"^4;",null,"^4<",["^Z",[null,null]],"^8",1,"^4=",false,"^7",72,"^4>","^4?","^9",72,"^4@",2,"^4A",true,"^46",["^Z",["^47",["^Z",[["^48","^49"]]]]]]],"^X",["^ ","^S","^S","^?","^@","~$s","^@","^@","^@"],"~:cljs.analyzer/constants",["^ ","^U",["^I",["~:cljs.spec.alpha/failure","~:path","~:expound/problems","~:ret","~:cljs.spec.alpha/value","~:expound.problem/check-fn-failure","~:fn","~:instrument","~:pred","~:else","~:via","~:expound/form","~:expound.problem/extra-input","~:expound/caller","~:cljs.spec.alpha/spec","~$fn","~:val","~:explain-data","~:expound.spec.problem/type","~:expound.problem/fspec-ret-failure","~:cljs.spec.alpha/problems","~:expound.problem/missing-key","~:spec","~:reason","~:expound.problem/missing-spec","~:expound.problem/fspec-exception-failure","~:expound.problem/fspec-fn-failure","~:expound/path","~:check-failed","~:expound/in","~:cljs.spec.alpha/args","~:expound.problem/check-ret-failure","~:cljs.spec.alpha/fn","~:expound.problem/insufficient-input","~:expound.spec/contains-key-pred","~$apply","~:clojure.spec.test.alpha/caller","~:expound.problem/not-in-set","~:orchestra.spec.test/caller","~:expound.problem/unknown","~:in","~:cljs.spec.alpha/ret","~:expound/via"]],"~:order",["^5?","^5W","^59","^5R","^5>","^57","^52","^50","^58","^5L","^5J","^56","^5E","^5Y","^5F","^5K","^55","^5Q","^5A","^5B","^5H","^5I","^5N","^54","^5P","^5;","^5T","^5D","^5G","^5V","^5C","^53","^5M","^5X","^5O","^4[","^5=","^5S","^5U","^5@","^5:","^5<","^51"]],"^13",["^ ","^V",["^I",[]]],"^14",["^ "],"^15",["^T","^S","^Q","^@"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^2:",[["^61","~:static-fns"],true,["^61","~:shadow-tweaks"],null,["^61","~:source-map-inline"],null,["^61","~:elide-asserts"],false,["^61","~:optimize-constants"],null,["^61","^1:"],null,["^61","~:external-config"],null,["^61","~:tooling-config"],null,["^61","~:emit-constants"],null,["^61","~:load-tests"],null,["^61","~:form-size-threshold"],null,["^61","~:data-readers"],null,["^61","~:infer-externs"],"~:auto",["^61","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^61","~:fn-invoke-direct"],null,["^61","~:source-map"],"/dev/null"]]]