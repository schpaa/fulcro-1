["^ ","~:output",["^ ","~:js","goog.provide('edn_query_language.core');\n/**\n * Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\n *   first level of children.  This is useful when you just want the AST for one layer of a query.\n */\nedn_query_language.core._STAR_shallow_conversion_STAR_ = false;\n/**\n * @define {boolean}\n */\nedn_query_language.core.INCLUDE_SPECS = goog.define(\"edn_query_language.core.INCLUDE_SPECS\",true);\nif(edn_query_language.core.INCLUDE_SPECS){\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),cljs.core.keyword_QMARK_);\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),null], null), null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident-value\",\"edn-query-language.core/ident-value\",-715964249)], null)));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__45542){\nreturn ((cljs.core.map_QMARK_(G__45542)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.bounded_count((1),G__45542))));\n}),cljs.core.map_QMARK_,(1),(function (i__14221__auto__,v__14222__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14222__auto__,(0));\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key\",\"edn-query-language.core/join-key\",-2056428321),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true,new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1))]),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__45543){\nreturn ((cljs.core.map_QMARK_(G__45543)) && (((((function (){var or__4126__auto__ = (1);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn (0);\n}\n})() <= cljs.core.bounded_count((1)\n,G__45543))) && ((cljs.core.bounded_count((1)\n,G__45543) <= (function (){var or__4126__auto__ = null;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn (9007199254740991);\n}\n})())))));\n}),(1),cljs.core.map_QMARK_,(function (i__14221__auto__,v__14222__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14222__auto__,(0));\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true,new cljs.core.Keyword(null,\"min-count\",\"min-count\",1594709013),(1))]),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.Symbol(\"cljs.core\",\"nat-int?\",\"cljs.core/nat-int?\",-164364171,null),cljs.core.nat_int_QMARK_);\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"depth\",\"depth\",1768663640),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.Keyword(null,\"unbounded\",\"unbounded\",-2054589494),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null)),\"null\"], null), null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"depth\",\"depth\",1768663640),new cljs.core.Keyword(null,\"unbounded\",\"unbounded\",-2054589494)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null)),\"null\"], null), null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"recursion-depth\",\"edn-query-language.core/recursion-depth\",-1726216891),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null], null), null)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"union\",\"edn-query-language.core/union\",-1766530903),new cljs.core.Keyword(\"edn-query-language.core\",\"recursion\",\"edn-query-language.core/recursion\",2090214849)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),cljs.core.map_QMARK_);\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr-key\",\"edn-query-language.core/param-expr-key\",1108092539),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-expr\",\"edn-query-language.core/join-key-param-expr\",496601666),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"join-key-param-key\",\"edn-query-language.core/join-key-param-key\",339850713),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.symbol_QMARK_);\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"mutate-key\",\"mutate-key\",-468386111),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-key\",\"edn-query-language.core/mutation-key\",422562651),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673))], null))], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"into\",\"into\",-150836029),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Keyword(null,\"count\",\"count\",2139924085),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911)],[cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),true,(function (G__45552){\nreturn ((cljs.core.map_QMARK_(G__45552)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.bounded_count((1),G__45552))));\n}),cljs.core.map_QMARK_,(1),(function (i__14221__auto__,v__14222__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__14222__auto__,(0));\n}),true,cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"conform-keys\",\"conform-keys\",-1800041814),true,new cljs.core.Keyword(null,\"count\",\"count\",2139924085),(1))]),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(null,\"mutation-join\",\"mutation-join\",1363539465),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(null,\"mutation-join\",\"mutation-join\",1363539465)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-expr\",\"edn-query-language.core/mutation-expr\",-2127055036),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation-join\",\"edn-query-language.core/mutation-join\",2054928671)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(null,\"special\",\"special\",-1125941630),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378),new cljs.core.Keyword(null,\"param-exp\",\"param-exp\",-594699720),new cljs.core.Keyword(null,\"special\",\"special\",-1125941630)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"join\",\"edn-query-language.core/join\",2091674288),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(\"edn-query-language.core\",\"mutation\",\"edn-query-language.core/mutation\",137261372),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"special-property\",\"edn-query-language.core/special-property\",-1016508506)], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__45564){\nreturn cljs.core.vector_QMARK_(G__45564);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query-expr\",\"edn-query-language.core/query-expr\",-1903182083),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761),new cljs.core.Keyword(\"edn-query-language.core\",\"join-query\",\"edn-query-language.core/join-query\",587629761));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"ident\",\"edn-query-language.core/ident\",419196228),cljs.core.symbol_QMARK_], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),cljs.core.symbol_QMARK_], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__45569){\nreturn cljs.core.coll_QMARK_(G__45569);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957))], null),null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45535#\",\"p1__45535#\",-2084687070,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),cljs.core.list(new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Symbol(null,\"p1__45535#\",\"p1__45535#\",-2084687070,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45536#\",\"p1__45536#\",71700497,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__45536#\",\"p1__45536#\",71700497,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),cljs.core.list(new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45536#\",\"p1__45536#\",71700497,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__45536#\",\"p1__45536#\",71700497,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45574){\nreturn cljs.core.map_QMARK_(G__45574);\n}),(function (G__45574){\nreturn cljs.core.contains_QMARK_(G__45574,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45574){\nreturn cljs.core.contains_QMARK_(G__45574,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\n})], null),(function (G__45574){\nreturn ((cljs.core.map_QMARK_(G__45574)) && (cljs.core.contains_QMARK_(G__45574,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45574,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (p1__45535_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(p1__45535_SHARP_));\n}),(function (x){\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__45536_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__45536_SHARP_);\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\n})], null),null));\n\nif((typeof edn_query_language !== 'undefined') && (typeof edn_query_language.core !== 'undefined') && (typeof edn_query_language.core.node_type !== 'undefined')){\n} else {\nedn_query_language.core.node_type = (function (){var method_table__4619__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4620__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4621__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4622__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4623__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__45580 = cljs.core.get_global_hierarchy;\nreturn (fexpr__45580.cljs$core$IFn$_invoke$arity$0 ? fexpr__45580.cljs$core$IFn$_invoke$arity$0() : fexpr__45580.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"edn-query-language.core\",\"node-type\"),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4623__auto__,method_table__4619__auto__,prefer_table__4620__auto__,method_cache__4621__auto__,cached_hierarchy__4622__auto__));\n})();\n}\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,null,(function (_){\nreturn cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45581){\nreturn cljs.core.map_QMARK_(G__45581);\n}),(function (G__45581){\nreturn cljs.core.contains_QMARK_(G__45581,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}),(function (G__45581){\nreturn cljs.core.contains_QMARK_(G__45581,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\n})], null),(function (G__45581){\nreturn ((cljs.core.map_QMARK_(G__45581)) && (cljs.core.contains_QMARK_(G__45581,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__45581,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)))], null),null]));\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),(function (_){\nreturn cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45594){\nreturn cljs.core.map_QMARK_(G__45594);\n}),(function (G__45594){\nreturn cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45594){\nreturn cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}),(function (G__45594){\nreturn cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\n})], null),(function (G__45594){\nreturn ((cljs.core.map_QMARK_(G__45594)) && (cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__45594,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510)))], null),null]));\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),(function (_){\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Symbol(\"cljs.core\",\"first\",\"cljs.core/first\",-752535972,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765))),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),false))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45538#\",\"p1__45538#\",92085828,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"union\",\"union\",2142937499),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__45538#\",\"p1__45538#\",92085828,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45617){\nreturn cljs.core.map_QMARK_(G__45617);\n}),(function (G__45617){\nreturn cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45617){\nreturn cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}),(function (G__45617){\nreturn cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\n}),(function (G__45617){\nreturn cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\n})], null),(function (G__45617){\nreturn ((cljs.core.map_QMARK_(G__45617)) && (cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))) && (cljs.core.contains_QMARK_(G__45617,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))));\n}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)))], null),null])),(function (p1__45537_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(new cljs.core.Keyword(null,\"query\",\"query\",-1288509510).cljs$core$IFn$_invoke$arity$1(p1__45537_SHARP_)),new cljs.core.Keyword(null,\"recursion\",\"recursion\",-749738765))){\nreturn p1__45537_SHARP_;\n} else {\nif(cljs.core.contains_QMARK_(p1__45537_SHARP_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))){\nreturn p1__45537_SHARP_;\n} else {\nreturn false;\n}\n}\n}),(function (x){\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__45538_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"union\",\"union\",2142937499),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__45538_SHARP_);\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\n})], null),null);\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"union\",\"union\",2142937499),(function (_){\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),\"null\"], null), null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45705){\nreturn cljs.core.map_QMARK_(G__45705);\n}),(function (G__45705){\nreturn cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45705){\nreturn cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\n}),(function (G__45705){\nreturn cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\n})], null),(function (G__45705){\nreturn ((cljs.core.map_QMARK_(G__45705)) && (cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))) && (cljs.core.contains_QMARK_(G__45705,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (p1__45539_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),null], null), null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(p1__45539_SHARP_));\n})], null),null);\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),(function (_){\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45540#\",\"p1__45540#\",-258144882,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__45540#\",\"p1__45540#\",-258144882,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45714){\nreturn cljs.core.map_QMARK_(G__45714);\n}),(function (G__45714){\nreturn cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45714){\nreturn cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\n}),(function (G__45714){\nreturn cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\n}),(function (G__45714){\nreturn cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\n})], null),(function (G__45714){\nreturn ((cljs.core.map_QMARK_(G__45714)) && (cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234))) && (cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))) && (cljs.core.contains_QMARK_(G__45714,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"union-key\",\"edn-query-language.ast/union-key\",-682972655),new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)))], null),null])),(function (x){\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__45540_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__45540_SHARP_);\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\n})], null),null);\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),(function (_){\nreturn cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__45541#\",\"p1__45541#\",182726925,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,\"null\",new cljs.core.Keyword(null,\"call\",\"call\",-519999866),\"null\",new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),\"null\",new cljs.core.Keyword(null,\"join\",\"join\",-758861890),\"null\"], null), null),new cljs.core.Symbol(null,\"p1__45541#\",\"p1__45541#\",182726925,null))),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.core.list(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__45723){\nreturn cljs.core.map_QMARK_(G__45723);\n}),(function (G__45723){\nreturn cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\n}),(function (G__45723){\nreturn cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}),(function (G__45723){\nreturn cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\n}),(function (G__45723){\nreturn cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\n})], null),(function (G__45723){\nreturn ((cljs.core.map_QMARK_(G__45723)) && (cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"type\",\"type\",1174270348))) && (cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))) && (cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))) && (cljs.core.contains_QMARK_(G__45723,new cljs.core.Keyword(null,\"params\",\"params\",710516235))));\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),new cljs.core.Keyword(\"edn-query-language.ast\",\"key\",\"edn-query-language.ast/key\",973476796),new cljs.core.Keyword(\"edn-query-language.ast\",\"dispatch-key\",\"edn-query-language.ast/dispatch-key\",-1369369141),new cljs.core.Keyword(\"edn-query-language.core\",\"params\",\"edn-query-language.core/params\",429907673)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"query\",\"edn-query-language.ast/query\",780932719),new cljs.core.Keyword(\"edn-query-language.ast\",\"children\",\"edn-query-language.ast/children\",1247091825)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"params\",\"params\",710516235)))], null),null])),(function (x){\nreturn cljs.core.every_QMARK_(cljs.core.comp.cljs$core$IFn$_invoke$arity$2((function (p1__45541_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),null,new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),null,new cljs.core.Keyword(null,\"join\",\"join\",-758861890),null], null), null),p1__45541_SHARP_);\n}),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(x));\n})], null),null);\n}));\n\nedn_query_language.core.node_type.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"root\",\"root\",-448657453),(function (_){\nreturn cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null);\n}));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"type\",\"edn-query-language.ast/type\",-1057701829),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"keys\",\"cljs.core/keys\",-927561820,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"methods\",\"cljs.core/methods\",-1793562622,null),new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null)))),cljs.core.set(cljs.core.keys(cljs.core.methods$(edn_query_language.core.node_type))));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"multi-spec\",\"cljs.spec.alpha/multi-spec\",175821274,null),new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)),cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),new cljs.core.Var(function(){return edn_query_language.core.node_type;},new cljs.core.Symbol(\"edn-query-language.core\",\"node-type\",\"edn-query-language.core/node-type\",1078374183,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"edn-query-language.core\",\"edn-query-language.core\",1253777601,null),new cljs.core.Symbol(null,\"node-type\",\"node-type\",1770023989,null),\"edn_query_language/core.cljc\",22,3,85,85,cljs.core.List.EMPTY,null,(cljs.core.truth_(edn_query_language.core.node_type)?edn_query_language.core.node_type.cljs$lang$test:null)])),new cljs.core.Keyword(null,\"type\",\"type\",1174270348)));\n} else {\n}\nedn_query_language.core.mark_meta = (function edn_query_language$core$mark_meta(source,target){\nvar G__45737 = target;\nif(cljs.core.truth_(cljs.core.meta(source))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__45737,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.meta(source));\n} else {\nreturn G__45737;\n}\n});\nedn_query_language.core.symbol__GT_ast = (function edn_query_language$core$symbol__GT_ast(k){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),k], null);\n});\nedn_query_language.core.keyword__GT_ast = (function edn_query_language$core$keyword__GT_ast(k){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),k], null);\n});\nedn_query_language.core.union_entry__GT_ast = (function edn_query_language$core$union_entry__GT_ast(p__45738){\nvar vec__45739 = p__45738;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45739,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45739,(1),null);\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234),k,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),v,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),v)], null),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null))], 0));\n});\nedn_query_language.core.union__GT_ast = (function edn_query_language$core$union__GT_ast(m){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),m,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.union_entry__GT_ast),m)], null);\n});\nedn_query_language.core.call__GT_ast = (function edn_query_language$core$call__GT_ast(p__45761){\nvar vec__45762 = p__45761;\nvar f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45762,(0),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45762,(1),null);\nvar call = vec__45762;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),f)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(args) : edn_query_language.core.expr__GT_ast.call(null,args)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(call));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576);\n}\n})());\n} else {\nvar ast = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4((edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(f) : edn_query_language.core.expr__GT_ast.call(null,f)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),cljs.core.merge,(function (){var or__4126__auto__ = args;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})());\nvar G__45771 = edn_query_language.core.mark_meta(call,ast);\nif((new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(ast) instanceof cljs.core.Symbol)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__45771,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"call\",\"call\",-519999866));\n} else {\nreturn G__45771;\n}\n}\n});\n/**\n * Convert a query to its AST representation.\n */\nedn_query_language.core.query__GT_ast = (function edn_query_language$core$query__GT_ast(query){\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(query));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([edn_query_language.core.mark_meta(query,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),query)], null)),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null))], 0));\n});\n/**\n * Call query->ast and return the first children.\n */\nedn_query_language.core.query__GT_ast1 = (function edn_query_language$core$query__GT_ast1(query_expr){\nreturn cljs.core.first(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(edn_query_language.core.query__GT_ast(query_expr)));\n});\nedn_query_language.core.join__GT_ast = (function edn_query_language$core$join__GT_ast(join){\nvar query_root_QMARK_ = new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(join));\nvar vec__45772 = cljs.core.first(join);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45772,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45772,(1),null);\nvar ast = (edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1 ? edn_query_language.core.expr__GT_ast.cljs$core$IFn$_invoke$arity$1(k) : edn_query_language.core.expr__GT_ast.call(null,k));\nvar type = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast)))?new cljs.core.Keyword(null,\"call\",\"call\",-519999866):new cljs.core.Keyword(null,\"join\",\"join\",-758861890));\nvar component = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ast,edn_query_language.core.mark_meta(join,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),v], null)),(((component == null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component], null)),(cljs.core.truth_(query_root_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888),true], null):null),(cljs.core.truth_((function (){var or__4126__auto__ = typeof v === 'number';\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),v);\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\nreturn edn_query_language.core._STAR_shallow_conversion_STAR_;\n}\n}\n})())?null:((cljs.core.vector_QMARK_(v))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.expr__GT_ast),v)], null):((cljs.core.map_QMARK_(v))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [edn_query_language.core.union__GT_ast(v)], null)], null):(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid join, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(join)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"error\",\"invalid-join\",\"error/invalid-join\",1594073006)], null))})()\n)))], 0));\n});\nedn_query_language.core.ident__GT_ast = (function edn_query_language$core$ident__GT_ast(p__45775){\nvar vec__45776 = p__45775;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45776,(0),null);\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45776,(1),null);\nvar ref = vec__45776;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510),k,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),ref], null);\n});\n/**\n * Given a query expression convert it into an AST.\n */\nedn_query_language.core.expr__GT_ast = (function edn_query_language$core$expr__GT_ast(x){\nif((x instanceof cljs.core.Symbol)){\nreturn edn_query_language.core.symbol__GT_ast(x);\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn edn_query_language.core.keyword__GT_ast(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn edn_query_language.core.join__GT_ast(x);\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn edn_query_language.core.ident__GT_ast(x);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn edn_query_language.core.call__GT_ast(x);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"error\",\"invalid-expression\",\"error/invalid-expression\",-881565136)], null));\n\n}\n}\n}\n}\n}\n});\nedn_query_language.core.wrap_expr = (function edn_query_language$core$wrap_expr(root_QMARK_,expr){\nif(cljs.core.truth_(root_QMARK_)){\nreturn cljs.core.with_meta((function (){var G__45779 = expr;\nif((expr instanceof cljs.core.Keyword)){\nreturn (new cljs.core.List(null,G__45779,null,(1),null));\n} else {\nreturn G__45779;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888),true], null));\n} else {\nreturn expr;\n}\n});\nedn_query_language.core.parameterize = (function edn_query_language$core$parameterize(expr,params){\nif((!(cljs.core.empty_QMARK_(params)))){\nreturn (new cljs.core.List(null,expr,(new cljs.core.List(null,params,null,(1),null)),(2),null));\n} else {\nreturn (new cljs.core.List(null,expr,null,(1),null));\n}\n});\n/**\n * Given a query expression AST convert it back into a query expression.\n */\nedn_query_language.core.ast__GT_expr = (function edn_query_language$core$ast__GT_expr(var_args){\nvar G__45784 = arguments.length;\nswitch (G__45784) {\ncase 1:\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$1 = (function (ast){\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(ast,false);\n}));\n\n(edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2 = (function (p__45785,unparse_QMARK_){\nvar map__45786 = p__45785;\nvar map__45786__$1 = (((((!((map__45786 == null))))?(((((map__45786.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45786.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45786):map__45786);\nvar ast = map__45786__$1;\nvar ast_meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45786__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45786__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45786__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"root\",\"root\",-448657453),type)){\nvar G__45794 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,ast_meta),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45780_SHARP_){\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__45780_SHARP_,unparse_QMARK_);\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast));\nif((!((component == null)))){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__45794,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\n} else {\nreturn G__45794;\n}\n} else {\nvar map__45795 = ast;\nvar map__45795__$1 = (((((!((map__45795 == null))))?(((((map__45795.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45795.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45795):map__45795);\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45795__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45795__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\nvar query_root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45795__$1,new cljs.core.Keyword(null,\"query-root\",\"query-root\",359781888));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45795__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nreturn edn_query_language.core.wrap_expr(query_root,(cljs.core.truth_((function (){var and__4115__auto__ = params;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type);\n} else {\nreturn and__4115__auto__;\n}\n})())?(function (){var expr = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"params\",\"params\",710516235)),unparse_QMARK_);\nreturn edn_query_language.core.parameterize(expr,params);\n})():(function (){var key__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type))?edn_query_language.core.parameterize(key,params):key);\nif(cljs.core.truth_((function (){var or__4126__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type)){\nreturn new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast);\n} else {\nreturn false;\n}\n}\n})())){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),query)) && ((!(typeof query === 'number'))) && (((unparse_QMARK_ === true) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type)))))){\nvar map__45803 = ast;\nvar map__45803__$1 = (((((!((map__45803 == null))))?(((((map__45803.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45803.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45803):map__45803);\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45803__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar query_meta = cljs.core.meta(query);\nif(((((1) === cljs.core.count(children))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children)))))){\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,cljs.core.into.cljs$core$IFn$_invoke$arity$3((function (){var G__45807 = cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,ast_meta);\nif(cljs.core.truth_(component)){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__45807,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\n} else {\nreturn G__45807;\n}\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__45808){\nvar map__45809 = p__45808;\nvar map__45809__$1 = (((((!((map__45809 == null))))?(((((map__45809.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45809.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45809):map__45809);\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45809__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\nvar children__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45809__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar component__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45809__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [union_key,(function (){var G__45814 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45781_SHARP_){\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__45781_SHARP_,unparse_QMARK_);\n})),children__$1);\nif((!((component__$1 == null)))){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__45814,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component__$1);\n} else {\nreturn G__45814;\n}\n})()], null);\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children)))]),ast_meta);\n} else {\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,(function (){var G__45815 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,query_meta),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45782_SHARP_){\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(p1__45782_SHARP_,unparse_QMARK_);\n})),children);\nif((!((component == null)))){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__45815,cljs.core.assoc,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component);\n} else {\nreturn G__45815;\n}\n})()]),ast_meta);\n}\n} else {\nreturn cljs.core.with_meta(cljs.core.PersistentArrayMap.createAsIfByAssoc([key__$1,query]),ast_meta);\n}\n} else {\nreturn key__$1;\n}\n})()));\n}\n}));\n\n(edn_query_language.core.ast__GT_expr.cljs$lang$maxFixedArity = 2);\n\nedn_query_language.core.ast__GT_query = (function edn_query_language$core$ast__GT_query(query_ast){\n\nvar _LT__GT_ = edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(query_ast,true);\nif(cljs.core.vector_QMARK_(_LT__GT_)){\nreturn _LT__GT_;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT__GT_], null);\n}\n});\n/**\n * Check if x is a EQL ident.\n */\nedn_query_language.core.ident_QMARK_ = (function edn_query_language$core$ident_QMARK_(x){\nreturn ((cljs.core.vector_QMARK_(x)) && ((cljs.core.first(x) instanceof cljs.core.Keyword)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(x))));\n});\nedn_query_language.core.focus_subquery_union_STAR_ = (function edn_query_language$core$focus_subquery_union_STAR_(query_ast,sub_ast){\nvar s_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45816_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234).cljs$core$IFn$_invoke$arity$1(p1__45816_SHARP_),p1__45816_SHARP_],null));\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (children,p__45817){\nvar map__45818 = p__45817;\nvar map__45818__$1 = (((((!((map__45818 == null))))?(((((map__45818.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45818.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45818):map__45818);\nvar union_entry = map__45818__$1;\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45818__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\nvar temp__5733__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s_index,union_key);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar sub = temp__5733__auto__;\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(union_entry,sub) : edn_query_language.core.focus_subquery_STAR_.call(null,union_entry,sub)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,union_entry);\n}\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast)));\n});\n/**\n * Internal implementation of focus-subquery, you can use this function directly if\n *   you want to send AST in and get AST out (instead of query in / query out).\n */\nedn_query_language.core.focus_subquery_STAR_ = (function edn_query_language$core$focus_subquery_STAR_(query_ast,sub_ast){\nvar q_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45820_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__45820_SHARP_),p1__45820_SHARP_],null));\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (children,p__45824){\nvar map__45825 = p__45824;\nvar map__45825__$1 = (((((!((map__45825 == null))))?(((((map__45825.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45825.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45825):map__45825);\nvar focus = map__45825__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45825__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45825__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar temp__5733__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(q_index,key);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar source = temp__5733__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(source,focus) : edn_query_language.core.focus_subquery_STAR_.call(null,source,focus)));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,edn_query_language.core.focus_subquery_union_STAR_(source,focus));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,source);\n\n}\n}\n} else {\nreturn children;\n}\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast)));\n});\n/**\n * Given a query, focus it along the specified query expression.\n * \n *   Examples:\n *  (focus-query [:foo :bar :baz] [:foo])\n *  => [:foo]\n * \n *  (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n *  => [{:foo [:bar]} :woz]\n */\nedn_query_language.core.focus_subquery = (function edn_query_language$core$focus_subquery(query,sub_query){\nvar query_ast = edn_query_language.core.query__GT_ast(query);\nvar sub_ast = edn_query_language.core.query__GT_ast(sub_query);\nreturn edn_query_language.core.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.focus_subquery_STAR_(query_ast,sub_ast),true);\n});\n/**\n * Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n *   on a whole AST. Each iteration of the transducer will get a single AST node to process.\n * \n *   ```\n *   (->> [:a {:b [:c :d]} :e]\n *     (p/query->ast)\n *     (p/transduce-children (remove (comp #{:a :c} :key)))\n *     (p/ast->query))\n *   ; => [{:b [:d]} :e]\n *   ```\n */\nedn_query_language.core.transduce_children = (function edn_query_language$core$transduce_children(xform,p__45836){\nvar map__45837 = p__45836;\nvar map__45837__$1 = (((((!((map__45837 == null))))?(((((map__45837.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45837.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45837):map__45837);\nvar node = map__45837__$1;\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45837__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar G__45848 = node;\nif(cljs.core.seq(children)){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__45848,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),(function (children__$1){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(xform,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__45835_SHARP_){\nreturn (edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.transduce_children.cljs$core$IFn$_invoke$arity$2(xform,p1__45835_SHARP_) : edn_query_language.core.transduce_children.call(null,xform,p1__45835_SHARP_));\n}))),children__$1);\n}));\n} else {\nreturn G__45848;\n}\n});\n/**\n * Given an AST point, check if the children is a union query type.\n */\nedn_query_language.core.union_children_QMARK_ = (function edn_query_language$core$union_children_QMARK_(ast){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),(function (){var G__45855 = ast;\nvar G__45855__$1 = (((G__45855 == null))?null:new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__45855));\nvar G__45855__$2 = (((G__45855__$1 == null))?null:cljs.core.first(G__45855__$1));\nif((G__45855__$2 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(G__45855__$2);\n}\n})());\n});\n/**\n * Add property param, eg:\n * \n *   ```\n *   (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\n *   (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\n *   ```\n *   \n */\nedn_query_language.core.update_property_param = (function edn_query_language$core$update_property_param(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___45998 = arguments.length;\nvar i__4737__auto___45999 = (0);\nwhile(true){\nif((i__4737__auto___45999 < len__4736__auto___45998)){\nargs__4742__auto__.push((arguments[i__4737__auto___45999]));\n\nvar G__46000 = (i__4737__auto___45999 + (1));\ni__4737__auto___45999 = G__46000;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(edn_query_language.core.update_property_param.cljs$core$IFn$_invoke$arity$variadic = (function (x,f,args){\nif(cljs.core.seq_QMARK_(x)){\nvar vec__45864 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45864,(0),null);\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45864,(1),null);\nreturn (new cljs.core.List(null,k,(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,p,args),null,(1),null)),(2),null));\n} else {\nreturn (new cljs.core.List(null,x,(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,cljs.core.PersistentArrayMap.EMPTY,args),null,(1),null)),(2),null));\n}\n}));\n\n(edn_query_language.core.update_property_param.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(edn_query_language.core.update_property_param.cljs$lang$applyTo = (function (seq45856){\nvar G__45857 = cljs.core.first(seq45856);\nvar seq45856__$1 = cljs.core.next(seq45856);\nvar G__45858 = cljs.core.first(seq45856__$1);\nvar seq45856__$2 = cljs.core.next(seq45856__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__45857,G__45858,seq45856__$2);\n}));\n\n/**\n * Merges two ast's.\n */\nedn_query_language.core.merge_asts = (function edn_query_language$core$merge_asts(qa,qb){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast,p__45869){\nvar map__45871 = p__45869;\nvar map__45871__$1 = (((((!((map__45871 == null))))?(((((map__45871.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45871.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45871):map__45871);\nvar item_b = map__45871__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45871__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45871__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45871__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar temp__5733__auto__ = cljs.core.first(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2((function (p1__45868_SHARP_,p2__45867_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p2__45867_SHARP_),key)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__45868_SHARP_,p2__45867_SHARP_], null);\n} else {\nreturn null;\n}\n}),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar vec__45873 = temp__5733__auto__;\nvar idx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45873,(0),null);\nvar item = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45873,(1),null);\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([type], 0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([type], 0))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(item),params)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),idx], null),edn_query_language.core.merge_asts,item_b);\n} else {\nreturn cljs.core.reduced(null);\n}\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prop\",\"prop\",-515168332),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(item))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type)))){\nreturn cljs.core.assoc_in(ast,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),idx], null),item_b);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),type)){\nreturn cljs.core.reduced(null);\n} else {\nreturn ast;\n\n}\n}\n}\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,item_b);\n}\n}),qa,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(qb));\n});\n/**\n * Merges two queries\n */\nedn_query_language.core.merge_queries = (function edn_query_language$core$merge_queries(qa,qb){\nvar G__45879 = edn_query_language.core.merge_asts(edn_query_language.core.query__GT_ast(qa),edn_query_language.core.query__GT_ast(qb));\nif((G__45879 == null)){\nreturn null;\n} else {\nreturn edn_query_language.core.ast__GT_query(G__45879);\n}\n});\nedn_query_language.core.mask_query_STAR_ = (function edn_query_language$core$mask_query_STAR_(p__45883,mask_ast){\nvar map__45884 = p__45883;\nvar map__45884__$1 = (((((!((map__45884 == null))))?(((((map__45884.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45884.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45884):map__45884);\nvar source_ast = map__45884__$1;\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45884__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast,p__45890){\nvar map__45891 = p__45890;\nvar map__45891__$1 = (((((!((map__45891 == null))))?(((((map__45891.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45891.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45891):map__45891);\nvar mask_node = map__45891__$1;\nvar mask_children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45891__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45891__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar temp__5733__auto__ = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.createAsIfByAssoc([key]),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)),children));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar source_node = temp__5733__auto__;\nif(((cljs.core.seq(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(source_node))) && (cljs.core.seq(mask_children)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,(edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2 ? edn_query_language.core.mask_query_STAR_.cljs$core$IFn$_invoke$arity$2(source_node,mask_node) : edn_query_language.core.mask_query_STAR_.call(null,source_node,mask_node)));\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.conj,source_node);\n}\n} else {\nreturn ast;\n}\n}),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(source_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(mask_ast));\n});\n/**\n * Given a source EQL query, use a mask EQL query to filter which elements to pick from\n *   the source. Params will be maintaned from the source, params in mask are ignored.\n */\nedn_query_language.core.mask_query = (function edn_query_language$core$mask_query(source,mask){\nvar source_ast = edn_query_language.core.query__GT_ast(source);\nvar mask_ast = edn_query_language.core.query__GT_ast(mask);\nreturn edn_query_language.core.ast__GT_query(edn_query_language.core.mask_query_STAR_(source_ast,mask_ast));\n});\n/**\n * Converts ident values and param values to ::p/var.\n */\nedn_query_language.core.normalize_query_variables = (function edn_query_language$core$normalize_query_variables(query){\nreturn edn_query_language.core.ast__GT_query(edn_query_language.core.transduce_children(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (x){\nvar G__45894 = x;\nvar G__45894__$1 = ((edn_query_language.core.ident_QMARK_(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(x)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__45894,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(x)),new cljs.core.Keyword(\"edn-query-language.core\",\"var\",\"edn-query-language.core/var\",-1571169875)], null)):G__45894);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(x))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__45894__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (p1__45893_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__45895){\nvar vec__45896 = p__45895;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45896,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45896,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(\"edn-query-language.core\",\"var\",\"edn-query-language.core/var\",-1571169875)], null);\n})),p1__45893_SHARP_);\n}));\n} else {\nreturn G__45894__$1;\n}\n})),edn_query_language.core.query__GT_ast(query)));\n});\n/**\n * Generates a consistent hash from the query. The query first goes to a process to remove any\n *   variables from idents and params, then we get the Clojure hash of it. You can use this to save\n *   information about a query that can be used to correlate with the query later.\n */\nedn_query_language.core.query_id = (function edn_query_language$core$query_id(query){\nreturn cljs.core.hash(edn_query_language.core.normalize_query_variables(query));\n});\n/**\n * Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n * a large query.\n */\nedn_query_language.core.query__GT_shallow_ast = (function edn_query_language$core$query__GT_shallow_ast(query){\nvar _STAR_shallow_conversion_STAR__orig_val__45899 = edn_query_language.core._STAR_shallow_conversion_STAR_;\nvar _STAR_shallow_conversion_STAR__temp_val__45900 = true;\n(edn_query_language.core._STAR_shallow_conversion_STAR_ = _STAR_shallow_conversion_STAR__temp_val__45900);\n\ntry{return edn_query_language.core.query__GT_ast(query);\n}finally {(edn_query_language.core._STAR_shallow_conversion_STAR_ = _STAR_shallow_conversion_STAR__orig_val__45899);\n}});\nif(edn_query_language.core.INCLUDE_SPECS){\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"query->ast\",\"edn-query-language.core/query->ast\",1749339811,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"root\",\"edn-query-language.ast/root\",1592076898),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"query->ast1\",\"edn-query-language.core/query->ast1\",-1127394108,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"ast->query\",\"edn-query-language.core/ast->query\",1361699420,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"ident?\",\"edn-query-language.core/ident?\",-1410852474,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"focus-subquery\",\"edn-query-language.core/focus-subquery\",167014332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(null,\"sub-query\",\"sub-query\",-1930580307),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"transduce-children\",\"edn-query-language.core/transduce-children\",966659322,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Keyword(null,\"node\",\"node\",581201198)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"xform\",\"xform\",-1725711008),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"node\",\"node\",581201198),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"union-children?\",\"edn-query-language.core/union-children?\",730690780,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"update-property-param\",\"edn-query-language.core/update-property-param\",213758125,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)], null),null),cljs.core.fn_QMARK_,cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(\"edn-query-language.core\",\"property\",\"edn-query-language.core/property\",-1479624874),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901)),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),null,null),new cljs.core.Keyword(\"edn-query-language.core\",\"param-expr\",\"edn-query-language.core/param-expr\",-1530253901),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"merge-asts\",\"edn-query-language.core/merge-asts\",807253317,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.ast\",\"node\",\"edn-query-language.ast/node\",-1614840957)),null,null,null));\n\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"edn-query-language.core\",\"merge-queries\",\"edn-query-language.core/merge-queries\",-229392415,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"qa\",\"qa\",-1970946508),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),new cljs.core.Keyword(null,\"qb\",\"qb\",-1714166232),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"edn-query-language.core\",\"query\",\"edn-query-language.core/query\",-1940317492)),null,null,null));\n} else {\n}\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","edn_query_language/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",["~$ident?"]],"~:name","~$edn-query-language.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","^>","^?","~$s","^?","~$cljs.core","^P","~$goog","^Q","^?","^?"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P","^>","^?","~$s","^?","^?","^?"],"~:form",["~#list",["~$ns","^K",["^W",["~:refer-clojure","~:exclude",["^I"]]],["^W",["^S",["^>","~:as","~$s"]]]]],"~:flags",["^ ","^S",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^?"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","edn_query_language/core.cljc"],"~:compiled-at",1609098939207,"~:resource-name","edn_query_language/core.cljc","~:warnings",[],"~:source","(ns edn-query-language.core\n  (:refer-clojure :exclude [ident?])\n  (:require [clojure.spec.alpha :as s]))\n\n(def ^:dynamic *shallow-conversion*\n  \"Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\n  first level of children.  This is useful when you just want the AST for one layer of a query.\"\n  false)\n\n#?(:clj  (def INCLUDE_SPECS true)\n   :cljs (goog-define INCLUDE_SPECS true))\n\n(when INCLUDE_SPECS\n  ; tag::specs[]\n  (s/def ::property keyword?)\n  (s/def ::special-property #{'*})\n  (s/def ::ident-value any?)\n  (s/def ::ident (s/tuple ::property ::ident-value))\n  (s/def ::join-key (s/or :prop ::property, :ident ::ident, :param-exp ::join-key-param-expr))\n  (s/def ::join (s/map-of ::join-key ::join-query, :count 1, :conform-keys true))\n  (s/def ::union (s/map-of ::property ::query, :min-count 1, :conform-keys true))\n  (s/def ::recursion-depth nat-int?)\n  (s/def ::recursion (s/or :depth ::recursion-depth, :unbounded #{'...}))\n\n  (s/def ::join-query\n    (s/or :query ::query\n          :union ::union\n          :recursion ::recursion))\n\n  (s/def ::params\n    map?)\n\n  (s/def ::param-expr-key\n    (s/or :prop ::property\n          :join ::join\n          :ident ::ident))\n\n  (s/def ::param-expr\n    (s/and seq? (s/cat :expr ::param-expr-key :params (s/? ::params))))\n\n  (s/def ::join-key-param-key (s/or :prop ::property :ident ::ident))\n\n  (s/def ::join-key-param-expr\n    (s/and seq? (s/cat :expr ::join-key-param-key :params (s/? ::params))))\n\n  (s/def ::mutation-key symbol?)\n\n  (s/def ::mutation-expr\n    (s/and seq? (s/cat :mutate-key ::mutation-key :params (s/? ::params))))\n\n  (s/def ::mutation-join\n    (s/map-of ::mutation-expr ::query :count 1 :conform-keys true))\n\n  (s/def ::mutation\n    (s/or :mutation ::mutation-expr\n          :mutation-join ::mutation-join))\n\n  (s/def ::query-expr\n    (s/or :prop ::property\n          :join ::join\n          :ident ::ident\n          :mutation ::mutation\n          :param-exp ::param-expr\n          :special ::special-property))\n\n  (s/def ::query\n    (s/coll-of ::query-expr :kind vector?))\n  ; end::specs[]\n\n  ;; ast specs\n\n  (s/def :edn-query-language.ast/query ::join-query)\n  (s/def :edn-query-language.ast/key (s/or :prop ::property :ident ::ident :sym symbol?))\n  (s/def :edn-query-language.ast/dispatch-key (s/or :prop ::property :sym symbol?))\n  (s/def :edn-query-language.ast/union-key ::property)\n\n  (s/def :edn-query-language.ast/children\n    (s/coll-of :edn-query-language.ast/node))\n\n  (s/def :edn-query-language.ast/root\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/children])\n      #(= :root (:type %))\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmulti node-type :type)\n\n  (defmethod node-type nil [_]\n    (s/keys :req-un [:edn-query-language.ast/key :edn-query-language.ast/dispatch-key]))\n\n  (defmethod node-type :prop [_]\n    (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key]))\n\n  (defmethod node-type :join [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key :edn-query-language.ast/query] :opt-un [:edn-query-language.ast/children])\n      #(if (-> % :query first (= :recursion)) % (if (contains? % :children) % false))\n      (fn [x] (every? (comp #(contains? #{:prop :join :union :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :union [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/query :edn-query-language.ast/children])\n      #(every? (comp #{:union-entry} :type) (:children %))))\n\n  (defmethod node-type :union-entry [_]\n    (s/and (s/keys :req-un [:edn-query-language.ast/type :edn-query-language.ast/union-key :edn-query-language.ast/query :edn-query-language.ast/children])\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :call [_]\n    (s/and (s/keys\n             :req-un [:edn-query-language.ast/type :edn-query-language.ast/key :edn-query-language.ast/dispatch-key ::params]\n             :opt-un [:edn-query-language.ast/query :edn-query-language.ast/children])\n      (fn [x] (every? (comp #(contains? #{:prop :join :call nil} %) :type) (:children x)))))\n\n  (defmethod node-type :root [_]\n    (s/spec :edn-query-language.ast/root))\n\n  (s/def :edn-query-language.ast/type (set (keys (methods node-type))))\n  (s/def :edn-query-language.ast/node (s/multi-spec node-type :type)))\n\n;; library\n\n(declare expr->ast)\n\n(defn- mark-meta [source target]\n  (cond-> target\n    (meta source) (assoc :meta (meta source))))\n\n(defn symbol->ast [k]\n  {:dispatch-key k\n   :key          k})\n\n(defn keyword->ast [k]\n  {:type         :prop\n   :dispatch-key k\n   :key          k})\n\n(defn union-entry->ast [[k v]]\n  (let [component (-> v meta :component)]\n    (merge\n      {:type      :union-entry\n       :union-key k\n       :query     v\n       :children  (into [] (map expr->ast) v)}\n      (when-not (nil? component)\n        {:component component}))))\n\n(defn union->ast [m]\n  {:type     :union\n   :query    m\n   :children (into [] (map union-entry->ast) m)})\n\n(defn call->ast [[f args :as call]]\n  (if (= 'quote f)\n    (assoc (expr->ast args) :target (or (-> call meta :target) :remote))\n    (let [ast (update-in (expr->ast f) [:params] merge (or args {}))]\n      (cond-> (mark-meta call ast)\n        (symbol? (:dispatch-key ast)) (assoc :type :call)))))\n\n(defn query->ast\n  \"Convert a query to its AST representation.\"\n  [query]\n  (let [component (-> query meta :component)]\n    (merge\n      (mark-meta query\n        {:type     :root\n         :children (into [] (map expr->ast) query)})\n      (when-not (nil? component)\n        {:component component}))))\n\n(defn query->ast1\n  \"Call query->ast and return the first children.\"\n  [query-expr]\n  (-> (query->ast query-expr) :children first))\n\n(defn join->ast [join]\n  (let [query-root? (-> join meta :query-root)\n        [k v] (first join)\n        ast         (expr->ast k)\n        type        (if (= :call (:type ast)) :call :join)\n        component   (-> v meta :component)]\n    (merge ast\n           (mark-meta join {:type type :query v})\n           (when-not (nil? component)\n             {:component component})\n           (when query-root?\n             {:query-root true})\n      (when-not (or (number? v) (= '... v) *shallow-conversion*)\n             (cond\n               (vector? v) {:children (into [] (map expr->ast) v)}\n               (map? v) {:children [(union->ast v)]}\n               :else (throw\n                       (ex-info (str \"Invalid join, \" join)\n                         {:type :error/invalid-join})))))))\n\n(defn ident->ast [[k id :as ref]]\n  {:type         :prop\n   :dispatch-key k\n   :key          ref})\n\n(defn expr->ast\n  \"Given a query expression convert it into an AST.\"\n  [x]\n  (cond\n    (symbol? x) (symbol->ast x)\n    (keyword? x) (keyword->ast x)\n    (map? x) (join->ast x)\n    (vector? x) (ident->ast x)\n    (seq? x) (call->ast x)\n    :else (throw\n            (ex-info (str \"Invalid expression \" x)\n              {:type :error/invalid-expression}))))\n\n(defn wrap-expr [root? expr]\n  (if root?\n    (with-meta\n      (cond-> expr (keyword? expr) list)\n      {:query-root true})\n    expr))\n\n(defn parameterize [expr params]\n  (if-not (empty? params)\n    (list expr params)\n    (list expr)))\n\n(defn ast->expr\n  \"Given a query expression AST convert it back into a query expression.\"\n  ([ast]\n   (ast->expr ast false))\n  ([{:keys [type component] ast-meta :meta :as ast} unparse?]\n   (if (= :root type)\n     (cond-> (into (with-meta [] ast-meta) (map #(ast->expr % unparse?)) (:children ast))\n       (not (nil? component)) (vary-meta assoc :component component))\n     (let [{:keys [key query query-root params]} ast]\n       (wrap-expr query-root\n         (if (and params (not= :call type))\n           (let [expr (ast->expr (dissoc ast :params) unparse?)]\n             (parameterize expr params))\n           (let [key (if (= :call type) (parameterize key params) key)]\n             (if (or (= :join type)\n                     (and (= :call type) (:children ast)))\n               (if (and (not= '... query) (not (number? query))\n                        (or (true? unparse?)\n                            (= :call type)))\n                 (let [{:keys [children]} ast\n                       query-meta (meta query)]\n                   (if (and (== 1 (count children))\n                            (= :union (:type (first children)))) ;; UNION\n                     (with-meta\n                       {key (into (cond-> (with-meta {} ast-meta)\n                                    component (vary-meta assoc :component component))\n                                  (map (fn [{:keys [union-key children component]}]\n                                         [union-key\n                                          (cond-> (into [] (map #(ast->expr % unparse?)) children)\n                                            (not (nil? component)) (vary-meta assoc :component component))]))\n                                  (:children (first children)))}\n                       ast-meta)\n                     (with-meta\n                       {key (cond-> (into (with-meta [] query-meta) (map #(ast->expr % unparse?)) children)\n                              (not (nil? component)) (vary-meta assoc :component component))}\n                       ast-meta)))\n                 (with-meta {key query} ast-meta))\n               key))))))))\n\n(defn ast->query [query-ast]\n  \"Given an AST convert it back into a query expression.\"\n  (as-> (ast->expr query-ast true) <>\n    (if (vector? <>)\n      <>\n      [<>])))\n\n(defn ident?\n  \"Check if x is a EQL ident.\"\n  [x]\n  (and (vector? x)\n       (keyword? (first x))\n       (= 2 (count x))))\n\n;; query processing helpers\n\n(declare focus-subquery*)\n\n(defn focus-subquery-union*\n  [query-ast sub-ast]\n  (let [s-index (into {} (map #(vector (:union-key %) %)) (:children sub-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [union-key] :as union-entry}]\n          (if-let [sub (get s-index union-key)]\n            (conj children (focus-subquery* union-entry sub))\n            (conj children union-entry)))\n        []\n        (:children query-ast)))))\n\n(defn focus-subquery*\n  \"Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out).\"\n  [query-ast sub-ast]\n  (let [q-index (into {} (map #(vector (:key %) %)) (:children query-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [key type] :as focus}]\n          (if-let [source (get q-index key)]\n            (cond\n              (= :join type (:type source))\n              (conj children (focus-subquery* source focus))\n\n              (= :union type (:type source))\n              (conj children (focus-subquery-union* source focus))\n\n              :else\n              (conj children source))\n            children))\n        []\n        (:children sub-ast)))))\n\n(defn focus-subquery\n  \"Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]\"\n  [query sub-query]\n  (let [query-ast (query->ast query)\n        sub-ast   (query->ast sub-query)]\n    (ast->expr (focus-subquery* query-ast sub-ast) true)))\n\n(defn transduce-children\n  \"Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```\"\n  [xform {:keys [children] :as node}]\n  (cond-> node\n    (seq children)\n    (update :children\n      (fn [children]\n        (into [] (comp xform (map #(transduce-children xform %))) children)))))\n\n(defn union-children?\n  \"Given an AST point, check if the children is a union query type.\"\n  [ast]\n  (= :union (some-> ast :children first :type)))\n\n(defn update-property-param\n  \"Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \\\"bar\\\") => (:keyword {:foo \\\"bar\\\"})\n  (p/update-property-param '(:keyword {:param \\\"prev\\\"}) assoc :foo \\\"bar\\\") => (:keyword {:foo \\\"bar\\\" :param \\\"prev\\\"})\n  ```\n  \"\n  [x f & args]\n  (if (seq? x)\n    (let [[k p] x]\n      (list k (apply f p args)))\n\n    (list x (apply f {} args))))\n\n(defn merge-asts\n  \"Merges two ast's.\"\n  [qa qb]\n  (reduce (fn [ast {:keys [key type params] :as item-b}]\n            (if-let [[idx item] (->> ast :children\n                                     (keep-indexed #(if (-> %2 :key (= key)) [%1 %2]))\n                                     first)]\n              (cond\n                (or (= :join (:type item) type)\n                    (= :prop (:type item) type))\n                (if (= (:params item) params)\n                  (update-in ast [:children idx] merge-asts item-b)\n                  (reduced nil))\n\n                (and (= :prop (:type item))\n                     (= :join type))\n                (assoc-in ast [:children idx] item-b)\n\n                (= :call type)\n                (reduced nil)\n\n                :else ast)\n              (update ast :children conj item-b)))\n    qa\n    (:children qb)))\n\n(defn merge-queries\n  \"Merges two queries\"\n  [qa qb]\n  (some-> (merge-asts (query->ast qa) (query->ast qb))\n    (ast->query)))\n\n(defn mask-query* [{:keys [children] :as source-ast} mask-ast]\n  (reduce\n    (fn [ast {mask-children :children\n              :keys         [key]\n              :as           mask-node}]\n      (if-let [source-node (->> children (filter (comp #{key} :key)) first)]\n        (if (and (seq (:children source-node)) (seq mask-children))\n          (update ast :children conj (mask-query* source-node mask-node))\n          (update ast :children conj source-node))\n        ast))\n    (assoc source-ast :children [])\n    (:children mask-ast)))\n\n(defn mask-query\n  \"Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored.\"\n  [source mask]\n  (let [source-ast (query->ast source)\n        mask-ast   (query->ast mask)]\n    (ast->query (mask-query* source-ast mask-ast))))\n\n(defn normalize-query-variables\n  \"Converts ident values and param values to ::p/var.\"\n  [query]\n  (->> (query->ast query)\n       (transduce-children\n         (map (fn [x]\n                (cond-> x\n                  (ident? (:key x))\n                  (assoc :key [(first (:key x)) ::var])\n\n                  (:params x)\n                  (update :params #(into {} (map (fn [[k _]] [k ::var])) %))))))\n       (ast->query)))\n\n(defn query-id\n  \"Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later.\"\n  [query]\n  (hash (normalize-query-variables query)))\n\n(defn query->shallow-ast\n  \"Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query.\"\n  [query]\n  (binding [*shallow-conversion* true]\n    (query->ast query)))\n\n(when INCLUDE_SPECS\n  (s/fdef query->ast\n    :args (s/cat :query (s/nilable ::query))\n    :ret :edn-query-language.ast/root)\n\n  (s/fdef query->ast1\n    :args (s/cat :query ::query)\n    :ret (s/nilable :edn-query-language.ast/node))\n\n  (s/fdef ast->query\n    :args (s/cat :ast :edn-query-language.ast/node)\n    :ret ::query)\n\n  (s/fdef ident?\n    :args (s/cat :x any?)\n    :ret boolean?)\n\n  (s/fdef focus-subquery\n    :args (s/cat :query ::query :sub-query ::query)\n    :ret ::query)\n\n  (s/fdef transduce-children\n    :args (s/cat :xform fn? :node :edn-query-language.ast/node)\n    :ret :edn-query-language.ast/node)\n\n  (s/fdef union-children?\n    :args (s/cat :ast :edn-query-language.ast/node)\n    :ret boolean?)\n\n  (s/fdef update-property-param\n    :args (s/cat :x (s/or :property ::property\n                          :expr ::param-expr)\n                 :f fn?\n                 :args (s/* any?))\n    :ret ::param-expr)\n\n  (s/fdef merge-asts\n    :args (s/cat :qa :edn-query-language.ast/node, :qb :edn-query-language.ast/node)\n    :ret (s/nilable :edn-query-language.ast/node))\n\n  (s/fdef merge-queries\n    :args (s/cat :qa (s/nilable ::query), :qb (s/nilable ::query))\n    :ret (s/nilable ::query)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["edn-query-language.core/*shallow-conversion*","js/goog.define","edn-query-language.core/INCLUDE_SPECS","cljs.spec.alpha/def-impl","cljs.core/keyword?","cljs.core/any?","cljs.spec.alpha.tuple_impl","cljs.spec.alpha/or-spec-impl","cljs.spec.alpha.every_impl","G__45542","cljs.core/map?","cljs.core._EQ_","cljs.core/bounded-count","i__14221__auto__","v__14222__auto__","cljs.core.nth","G__45543","or__4126__auto__","cljs.spec.alpha/MAX_INT","cljs.core/nat-int?","cljs.spec.alpha/and-spec-impl","cljs.core/seq?","cljs.spec.alpha/cat-impl","cljs.spec.alpha/maybe-impl","cljs.core/symbol?","G__45552","G__45564","cljs.core/vector?","G__45569","cljs.core/coll?","p1__45535#","cljs.spec.alpha/map-spec-impl","G__45574","cljs.core/contains?","x","cljs.core/every?","p1__45536#","cljs.core.comp","js/edn-query-language","js/edn-query-language.core","js/edn-query-language.core.node-type","method-table__4619__auto__","cljs.core.atom","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","cljs.core.get","fexpr__45580","cljs.core/MultiFn","cljs.core.symbol","edn-query-language.core/node-type","_","G__45581","G__45594","p1__45537#","G__45617","cljs.core/first","p1__45538#","p1__45539#","G__45705","G__45714","p1__45540#","G__45723","p1__45541#","cljs.spec.alpha.spec_impl","cljs.core/set","cljs.core/keys","cljs.core/methods","cljs.spec.alpha.multi_spec_impl","edn-query-language.core/mark-meta","source","target","G__45737","cljs.core/meta","cljs.core.assoc","edn-query-language.core/symbol->ast","k","edn-query-language.core/keyword->ast","p__45738","vec__45739","edn-query-language.core/union-entry->ast","v","component","cljs.core.merge","cljs.core.into","cljs.core.map","edn-query-language.core/expr->ast","edn-query-language.core/union->ast","m","p__45761","vec__45762","edn-query-language.core/call->ast","f","args","call","ast","cljs.core.update_in","cljs.core/merge","G__45771","cljs.core/Symbol","edn-query-language.core/query->ast","query","edn-query-language.core/query->ast1","query-expr","edn-query-language.core/join->ast","join","vec__45772","query-root?","type","cljs.core.ex_info","p__45775","vec__45776","edn-query-language.core/ident->ast","id","ref","cljs.core/Keyword","edn-query-language.core/wrap-expr","root?","expr","cljs.core/with-meta","G__45779","cljs.core/List","edn-query-language.core/parameterize","params","cljs.core/empty?","var_args","G__45784","edn-query-language.core/ast->expr","js/Error","p__45785","map__45786","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","edn_query_language.core.ast__GT_expr","ast-meta","unparse?","G__45794","p1__45780#","cljs.core.vary_meta","cljs.core/assoc","map__45795","key","query-root","and__4115__auto__","cljs.core.not_EQ_","cljs.core.dissoc","map__45803","children","query-meta","cljs.core/count","G__45807","p__45808","map__45809","union-key","G__45814","p1__45781#","G__45815","p1__45782#","edn-query-language.core/ast->query","query-ast","<>","edn-query-language.core/ident?","edn-query-language.core/focus-subquery-union*","sub-ast","s-index","p1__45816#","cljs.core/PersistentVector","cljs.core.reduce","p__45817","map__45818","union-entry","temp__5733__auto__","sub","cljs.core.conj","edn-query-language.core/focus-subquery*","q-index","p1__45820#","p__45824","map__45825","focus","edn-query-language.core/focus-subquery","sub-query","p__45836","map__45837","edn-query-language.core/transduce-children","xform","node","G__45848","cljs.core/seq","cljs.core.update","p1__45835#","edn-query-language.core/union-children?","G__45855","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","edn-query-language.core/update-property-param","seq45856","G__45857","cljs.core/next","G__45858","self__4723__auto__","vec__45864","p","edn-query-language.core/merge-asts","qa","qb","p__45869","map__45871","item-b","vec__45873","idx","item","p1__45868#","p2__45867#","cljs.core.keep_indexed","cljs.core/reduced","cljs.core/assoc-in","cljs.core/conj","edn-query-language.core/merge-queries","G__45879","p__45883","map__45884","edn-query-language.core/mask-query*","source-ast","mask-ast","p__45890","map__45891","mask-children","mask-node","source-node","cljs.core.filter","edn-query-language.core/mask-query","mask","edn-query-language.core/normalize-query-variables","G__45894","p1__45893#","p__45895","vec__45896","edn-query-language.core/query-id","cljs.core/hash","edn-query-language.core/query->shallow-ast","*shallow-conversion*-orig-val__45899","*shallow-conversion*-temp-val__45900","cljs.spec.alpha/fspec-impl","cljs.spec.alpha/nilable-impl","cljs.core/boolean?","cljs.core/fn?","cljs.spec.alpha/rep-impl"]],"~:used-vars",["^H",["~$cljs.spec.alpha/spec-impl","~$edn-query-language.core/union->ast","~$js/goog.define","~$cljs.core/comp","~$cljs.core/boolean?","~$edn-query-language.core/merge-queries","~$cljs.core/methods","~$cljs.core/MultiFn","~$edn-query-language.core/keyword->ast","~$cljs.core/keyword?","~$edn-query-language.core/mask-query","~$edn-query-language.core/query-id","~$cljs.spec.alpha/MAX_INT","~$edn-query-language.core/query->ast","~$cljs.spec.alpha/every-impl","~$edn-query-language.core/join->ast","~$cljs.spec.alpha/maybe-impl","~$edn-query-language.core/normalize-query-variables","~$edn-query-language.core/query->ast1","~$cljs.core/vector?","~$edn-query-language.core/ident->ast","~$cljs.core/=","~$cljs.core/keys","~$cljs.spec.alpha/rep-impl","~$edn-query-language.core/merge-asts","~$edn-query-language.core/ident?","~$cljs.core/hash","~$cljs.core/count","~$edn-query-language.core/mask-query*","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$edn-query-language.core/node-type","~$cljs.core/Keyword","~$cljs.spec.alpha/def-impl","~$cljs.spec.alpha/nilable-impl","~$cljs.core/not=","~$js/edn-query-language.core","~$cljs.spec.alpha/tuple-impl","~$edn-query-language.core/union-entry->ast","~$js/edn-query-language.core.node-type","~$js/edn-query-language","~$cljs.core/set","~$cljs.spec.alpha/multi-spec-impl","~$cljs.core/empty?","~$edn-query-language.core/update-property-param","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.spec.alpha/map-spec-impl","~$cljs.core/conj","~$cljs.core/vary-meta","~$cljs.core/update","~$edn-query-language.core/symbol->ast","~$cljs.core/with-meta","~$edn-query-language.core/wrap-expr","~$cljs.core/map","~$cljs.core/fn?","~$cljs.spec.alpha/or-spec-impl","~$edn-query-language.core/call->ast","~$edn-query-language.core/ast->expr","~$cljs.core/List","~$cljs.core/-add-method","~$edn-query-language.core/parameterize","~$cljs.spec.alpha/cat-impl","~$edn-query-language.core/*shallow-conversion*","~$edn-query-language.core/mark-meta","~$edn-query-language.core/focus-subquery-union*","~$cljs.core/symbol","~$edn-query-language.core/INCLUDE_SPECS","~$cljs.core/nat-int?","~$cljs.core/reduced","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.core/bounded-count","~$cljs.core/not","~$cljs.core/assoc","~$edn-query-language.core/query->shallow-ast","~$cljs.core/assoc-in","~$edn-query-language.core/transduce-children","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.core/coll?","~$edn-query-language.core/focus-subquery*","~$cljs.spec.alpha/and-spec-impl","~$edn-query-language.core/union-children?","~$cljs.core/first","~$edn-query-language.core/ast->query","~$cljs.core/seq?","~$edn-query-language.core/focus-subquery","~$cljs.spec.alpha/fspec-impl","~$cljs.core/merge","~$cljs.core/every?","~$cljs.core/update-in","~$js/Error","~$cljs.core/any?","~$edn-query-language.core/expr->ast"]]],"~:cache-keys",["~#cmap",[["^14","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^Q","~$goog.dom.HtmlElement"]]],["^14","cljs/spec/gen/alpha.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^P","~$goog.Uri"]]],["^14","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","~$goog.array","~$goog.asserts"]]],["^14","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^14","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3V"]]],["^14","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S"]]],["^14","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S"]]],"~:SHADOW-TIMESTAMP",[1609098713000,1609098713000,1609098712000],["^14","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","~$goog.reflect"]]],["^14","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","~$goog.html.trustedtypes","^3Y","^3Z","^3[","^40"]]],["^14","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","edn_query_language/core.cljc"],["89cd2ff9787f6dfcb81506253473dfa9b27d718a","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^P","^?"]]],["^14","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","~$goog.html.SafeUrl","^3[","^40","^3V"]]],["^14","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^44","^3X","~$goog.html.uncheckedconversions","^3[","^3V"]]],["^14","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^P"]]],["^14","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^14","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","~$goog.dom.TagName","~$goog.dom.tags","^48","^49","~$goog.html.SafeStyleSheet","^44","^3X","^43","^3Y","^3Z","~$goog.labs.userAgent.browser","^3U","^3[","^40","^3V"]]],["^14","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3U"]]],["^14","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","cljs/spec/alpha.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^P","^3U","~$clojure.walk","^C","~$clojure.string"]]],["^14","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",[]]],["^14","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3U"]]],["^14","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^P","^4C","~$goog.string.StringBuffer"]]],["^14","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","~$goog.dom.safe","^4:","^3[","^3V"]]],["^14","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3V"]]],["^14","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","^46","~$goog.math"]]],["^14","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","^47","^48","^49","^4?","^44","^3X","^3[","^3V"]]],["^14","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q"]]],["^14","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","~$goog.math.Long","~$goog.math.Integer","^4C","^3U","^3R","^3Q","^4K"]]],["^14","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","^43","^3[","^40"]]],["^14","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","^49","^3U","^3[","^40","^3V"]]],["^14","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^42"]]],["^14","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3R","^3S","^4C"]]],["^14","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3L",["^ ","^3M",null,"^3N",["^H",[]],"^3O",["^Q","^3S","^40"]]]]],"~:clj-info",["^ ","jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/spec/alpha.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1604678811000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1604678794000,"jar:file:/Users/chris/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1604678793000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/spec/gen/alpha.cljc",1609098712000,"jar:file:/Users/chris/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1609098712000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","edn_query_language/core.cljc","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",["^I"]],"^J","^K","^N",null,"^O",["^ ","^>","^?","~$s","^?","^P","^P","^Q","^Q","^?","^?"],"^R",["^H",["^S"]],"~:shadow/js-access-global",["^H",["Error"]],"^T",null,"~:defs",["^ ","~$expr->ast",["^ ","~:protocol-inline",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",198,"^8",7,"^9",198,"^:",16,"~:arglists",["^W",["~$quote",["^W",[["~$x"]]]]],"~:doc","Given a query expression convert it into an AST."],"^J","^3I","^6","edn_query_language/core.cljc","^:",16,"~:method-params",["^W",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"~:variadic?",false,"^7",198,"~:ret-tag",["^H",[null,"~$clj","~$any","~$cljs.core/IMap","~$clj-nil"]],"^9",198,"~:max-fixed-arity",1,"~:fn-var",true,"^5F",["^W",["^5G",["^W",[["~$x"]]]]],"^5H","Given a query expression convert it into an AST."],"~$*shallow-conversion*",["^ ","^5",["^ ","^6","edn_query_language/core.cljc","^7",5,"^8",16,"^9",5,"^:",36,"~:dynamic",true],"^J","^2U","^6","edn_query_language/core.cljc","^:",36,"^8",1,"^5U",true,"^7",5,"^9",5,"~:tag","^5O","^5H","Dynamic var.  When bound to true in the current thread calls to query->ast will no go past the\n  first level of children.  This is useful when you just want the AST for one layer of a query."],"~$union-children?",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",348,"^8",7,"^9",348,"^:",22,"^5F",["^W",["^5G",["^W",[["~$ast"]]]]],"^5H","Given an AST point, check if the children is a union query type."],"^J","^3>","^6","edn_query_language/core.cljc","^:",22,"^5I",["^W",[["^5X"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",348,"^5M","~$boolean","^9",348,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^5X"]]]]],"^5H","Given an AST point, check if the children is a union query type."],"~$call->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",150,"^8",7,"^9",150,"^:",16,"^5F",["^W",["^5G",["^W",[[["~$f","~$args","^[","~$call"]]]]]]],"^J","^2O","^6","edn_query_language/core.cljc","^:",16,"^5I",["^W",[["~$p__45761"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",150,"^5M",["^H",[null,"^5N","^5O"]],"^9",150,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[[["~$f","^5[","^[","^60"]]]]]]],"~$ast->expr",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",223,"^8",7,"^9",223,"^:",16,"^5F",["^W",["^5G",["^W",[["^5X"],[["^ ","~:keys",["~$type","~$component"],"~$ast-meta","^5","^[","^5X"],"~$unparse?"]]]]],"^5H","Given a query expression AST convert it back into a query expression.","~:top-fn",["^ ","^5L",false,"~:fixed-arity",2,"^5R",2,"^5I",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]],"^5F",["^W",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]]],"^5K",["^W",[null,null]]]],"^J","^2P","^6","edn_query_language/core.cljc","^:",16,"^68",["^ ","^5L",false,"^69",2,"^5R",2,"^5I",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]],"^5F",["^W",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]]],"^5K",["^W",[null,null]]],"^5I",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]],"^5J",null,"^69",2,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"~:methods",[["^ ","^69",1,"^5L",false,"^5V","^5O"],["^ ","^69",2,"^5L",false,"^5V",["^H",[null,"^5N","^5O","~$cljs.core/MetaFn","^5Q"]]]],"^7",223,"^9",223,"^5R",2,"^5S",true,"^5F",["^W",[["^5X"],[["^ ","^63",["^64","^65"],"^66","^5","^[","^5X"],"^67"]]],"^5H","Given a query expression AST convert it back into a query expression."],"~$mark-meta",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",122,"^8",8,"^9",122,"^:",17,"~:private",true,"^5F",["^W",["^5G",["^W",[["~$source","~$target"]]]]]],"^6=",true,"^J","^2V","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["^6>","^6?"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",122,"^5M",["^H",[null,"^5N","^5O"]],"^9",122,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6>","^6?"]]]]]],"~$INCLUDE_SPECS",["^ ","^5",["^ ","^6","edn_query_language/core.cljc","^7",11,"^8",23,"^9",11,"^:",36,"~:jsdoc",["^W",["@define {boolean}"]],"^5V","^5Y"],"^J","^2Y","^6","edn_query_language/core.cljc","^:",36,"^8",10,"^7",11,"^9",11,"^5V","^5Y","^6A",["^W",["@define {boolean}"]]],"~$focus-subquery-union*",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",280,"^8",7,"^9",280,"^:",28,"^5F",["^W",["^5G",["^W",[["~$query-ast","~$sub-ast"]]]]]],"^J","^2W","^6","edn_query_language/core.cljc","^:",28,"^5I",["^W",[["^6C","^6D"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",280,"^5M",["^H",["^5N","^5O"]],"^9",280,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6C","^6D"]]]]]],"~$focus-subquery*",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",293,"^8",7,"^9",293,"^:",22,"^5F",["^W",["^5G",["^W",[["^6C","^6D"]]]]],"^5H","Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out)."],"^J","^3<","^6","edn_query_language/core.cljc","^:",22,"^5I",["^W",[["^6C","^6D"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",293,"^5M",["^H",["^5N","^5O"]],"^9",293,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6C","^6D"]]]]],"^5H","Internal implementation of focus-subquery, you can use this function directly if\n  you want to send AST in and get AST out (instead of query in / query out)."],"~$transduce-children",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",330,"^8",7,"^9",330,"^:",25,"^5F",["^W",["^5G",["^W",[["~$xform",["^ ","^63",["~$children"],"^[","~$node"]]]]]],"^5H","Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```"],"^J","^38","^6","edn_query_language/core.cljc","^:",25,"^5I",["^W",[["^6G","~$p__45836"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",330,"^5M",["^H",[null,"^5N","^5O"]],"^9",330,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6G",["^ ","^63",["^6H"],"^[","^6I"]]]]]],"^5H","Recursivelly transduce children on the AST, you can use this to apply filter/transformations\n  on a whole AST. Each iteration of the transducer will get a single AST node to process.\n\n  ```\n  (->> [:a {:b [:c :d]} :e]\n       (p/query->ast)\n       (p/transduce-children (remove (comp #{:a :c} :key)))\n       (p/ast->query))\n  ; => [{:b [:d]} :e]\n  ```"],"~$focus-subquery",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",316,"^8",7,"^9",316,"^:",21,"^5F",["^W",["^5G",["^W",[["~$query","~$sub-query"]]]]],"^5H","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"^J","^3B","^6","edn_query_language/core.cljc","^:",21,"^5I",["^W",[["^6L","^6M"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",316,"^5M",["^H",[null,"^5N","^5O","^6;","^5Q"]],"^9",316,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6L","^6M"]]]]],"^5H","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"~$ast->query",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",262,"^8",7,"^9",262,"^:",17,"^5F",["^W",["^5G",["^W",[["^6C"]]]]]],"^J","^3@","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["^6C"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",262,"^5M",["^H",[null,"^5N","~$cljs.core/IVector","^5O","^6;","^5Q"]],"^9",262,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6C"]]]]]],"~$query->ast1",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",168,"^8",7,"^9",168,"^:",18,"^5F",["^W",["^5G",["^W",[["~$query-expr"]]]]],"^5H","Call query->ast and return the first children."],"^J","^1R","^6","edn_query_language/core.cljc","^:",18,"^5I",["^W",[["^6Q"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",168,"^5M",["^H",["^5O","^5Q"]],"^9",168,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6Q"]]]]],"^5H","Call query->ast and return the first children."],"~$query->shallow-ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",442,"^8",7,"^9",442,"^:",25,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."],"^J","^36","^6","edn_query_language/core.cljc","^:",25,"^5I",["^W",[["^6L"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",442,"^9",442,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Like query->ast, but does not follow joins.  Useful for efficiently getting just the top-level entries in\n   a large query."],"~$merge-asts",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",368,"^8",7,"^9",368,"^:",17,"^5F",["^W",["^5G",["^W",[["~$qa","~$qb"]]]]],"^5H","Merges two ast's."],"^J","^1X","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["^6T","^6U"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",368,"^5M",["^H",[null,"^5O"]],"^9",368,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6T","^6U"]]]]],"^5H","Merges two ast's."],"~$parameterize",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",218,"^8",7,"^9",218,"^:",19,"^5F",["^W",["^5G",["^W",[["~$expr","~$params"]]]]]],"^J","^2S","^6","edn_query_language/core.cljc","^:",19,"^5I",["^W",[["^6W","^6X"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",218,"^5M","^2Q","^9",218,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6W","^6X"]]]]]],"~$mask-query",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",413,"^8",7,"^9",413,"^:",17,"^5F",["^W",["^5G",["^W",[["^6>","~$mask"]]]]],"^5H","Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."],"^J","^1J","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["^6>","^6Z"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",413,"^5M",["^H",[null,"^5N","^6O","^5O","^6;","^5Q"]],"^9",413,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6>","^6Z"]]]]],"^5H","Given a source EQL query, use a mask EQL query to filter which elements to pick from\n  the source. Params will be maintaned from the source, params in mask are ignored."],"~$mask-query*",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",400,"^8",7,"^9",400,"^:",18,"^5F",["^W",["^5G",["^W",[[["^ ","^63",["^6H"],"^[","~$source-ast"],"~$mask-ast"]]]]]],"^J","^20","^6","edn_query_language/core.cljc","^:",18,"^5I",["^W",[["~$p__45883","^71"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",400,"^5M",["^H",[null,"^5O"]],"^9",400,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[[["^ ","^63",["^6H"],"^[","^70"],"^71"]]]]]],"~$query-id",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",435,"^8",7,"^9",435,"^:",15,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."],"^J","^1K","^6","edn_query_language/core.cljc","^:",15,"^5I",["^W",[["^6L"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",435,"^5M",["^H",[null,"~$number"]],"^9",435,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Generates a consistent hash from the query. The query first goes to a process to remove any\n  variables from idents and params, then we get the Clojure hash of it. You can use this to save\n  information about a query that can be used to correlate with the query later."],"~$wrap-expr",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",211,"^8",7,"^9",211,"^:",16,"^5F",["^W",["^5G",["^W",[["~$root?","^6W"]]]]]],"^J","^2K","^6","edn_query_language/core.cljc","^:",16,"^5I",["^W",[["^76","^6W"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",211,"^5M",["^H",[null,"^5N","^6;","^5Q"]],"^9",211,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^76","^6W"]]]]]],"~$join->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",173,"^8",7,"^9",173,"^:",16,"^5F",["^W",["^5G",["^W",[["~$join"]]]]]],"^J","^1O","^6","edn_query_language/core.cljc","^:",16,"^5I",["^W",[["^78"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",173,"^5M",["^H",["^5O","^5Q"]],"^9",173,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^78"]]]]]],"~$normalize-query-variables",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",421,"^8",7,"^9",421,"^:",32,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Converts ident values and param values to ::p/var."],"^J","^1Q","^6","edn_query_language/core.cljc","^:",32,"^5I",["^W",[["^6L"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",421,"^5M",["^H",[null,"^5N","^6O","^5O","^6;","^5Q"]],"^9",421,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Converts ident values and param values to ::p/var."],"^I",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",269,"^8",7,"^9",269,"^:",13,"^5F",["^W",["^5G",["^W",[["~$x"]]]]],"^5H","Check if x is a EQL ident."],"^J","^1Y","^6","edn_query_language/core.cljc","^:",13,"^5I",["^W",[["~$x"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",269,"^5M","^5Y","^9",269,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["~$x"]]]]],"^5H","Check if x is a EQL ident."],"~$keyword->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",130,"^8",7,"^9",130,"^:",19,"^5F",["^W",["^5G",["^W",[["~$k"]]]]]],"^J","^1H","^6","edn_query_language/core.cljc","^:",19,"^5I",["^W",[["~$k"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",130,"^5M","^5P","^9",130,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["~$k"]]]]]],"~$node-type",["^ ","^J","^24","^6","edn_query_language/core.cljc","^7",85,"^8",3,"^9",85,"^:",22,"^5",["^ ","^6","edn_query_language/core.cljc","^7",85,"^8",13,"^9",85,"^:",22],"^5V","^1G"],"~$query->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",157,"^8",7,"^9",157,"^:",17,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Convert a query to its AST representation."],"^J","^1M","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["^6L"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",157,"^5M",["^H",["^5O","^5Q"]],"^9",157,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6L"]]]]],"^5H","Convert a query to its AST representation."],"~$ident->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",193,"^8",7,"^9",193,"^:",17,"^5F",["^W",["^5G",["^W",[[["~$k","~$id","^[","~$ref"]]]]]]],"^J","^1T","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["~$p__45775"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",193,"^5M","^5P","^9",193,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[[["~$k","^7>","^[","^7?"]]]]]]],"~$merge-queries",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",394,"^8",7,"^9",394,"^:",20,"^5F",["^W",["^5G",["^W",[["^6T","^6U"]]]]],"^5H","Merges two queries"],"^J","^1E","^6","edn_query_language/core.cljc","^:",20,"^5I",["^W",[["^6T","^6U"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",394,"^5M",["^H",[null,"^5N","^6O","^5O","^6;","^5Q"]],"^9",394,"^5R",2,"^5S",true,"^5F",["^W",["^5G",["^W",[["^6T","^6U"]]]]],"^5H","Merges two queries"],"~$union-entry->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",135,"^8",7,"^9",135,"^:",23,"^5F",["^W",["^5G",["^W",[[["~$k","~$v"]]]]]]],"^J","^2;","^6","edn_query_language/core.cljc","^:",23,"^5I",["^W",[["~$p__45738"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",135,"^5M",["^H",["^5O","^5Q"]],"^9",135,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[[["~$k","~$v"]]]]]]],"~$symbol->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",126,"^8",7,"^9",126,"^:",18,"^5F",["^W",["^5G",["^W",[["~$k"]]]]]],"^J","^2I","^6","edn_query_language/core.cljc","^:",18,"^5I",["^W",[["~$k"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",126,"^5M","^5P","^9",126,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["~$k"]]]]]],"~$union->ast",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",145,"^8",7,"^9",145,"^:",17,"^5F",["^W",["^5G",["^W",[["~$m"]]]]]],"^J","^1A","^6","edn_query_language/core.cljc","^:",17,"^5I",["^W",[["~$m"]]],"^5J",null,"^5K",["^W",[null,null]],"^8",1,"^5L",false,"^7",145,"^5M","^5P","^9",145,"^5R",1,"^5S",true,"^5F",["^W",["^5G",["^W",[["~$m"]]]]]],"~$update-property-param",["^ ","^5E",null,"^5",["^ ","^6","edn_query_language/core.cljc","^7",353,"^8",7,"^9",353,"^:",28,"^5F",["^W",["^5G",["^W",[["~$x","~$f","~$&","^5["]]]]],"^5H","Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\n  (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\n  ```\n  ","^68",["^ ","^5L",true,"^69",2,"^5R",2,"^5I",[["^W",["~$x","~$f","^5["]]],"^5F",["^W",[["~$x","~$f","~$&","^5["]]],"^5K",["^W",[null]]]],"^J","^2A","^6","edn_query_language/core.cljc","^:",28,"^68",["^ ","^5L",true,"^69",2,"^5R",2,"^5I",[["^W",["~$x","~$f","^5["]]],"^5F",["^W",[["~$x","~$f","~$&","^5["]]],"^5K",["^W",[null]]],"^5I",[["^W",["~$x","~$f","^5["]]],"^5J",null,"^69",2,"^5K",["^W",[null]],"^8",1,"^5L",true,"^6:",[["^ ","^69",2,"^5L",true,"^5V","^2Q"]],"^7",353,"^5M","^5O","^9",353,"^5R",2,"^5S",true,"^5F",["^W",[["~$x","~$f","~$&","^5["]]],"^5H","Add property param, eg:\n\n  ```\n  (p/update-property-param :keyword assoc :foo \"bar\") => (:keyword {:foo \"bar\"})\n  (p/update-property-param '(:keyword {:param \"prev\"}) assoc :foo \"bar\") => (:keyword {:foo \"bar\" :param \"prev\"})\n  ```\n  "]],"^U",["^ ","^P","^P","^>","^?","~$s","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","^R",["^H",["~:args","~$cljs.spec.alpha/*","~:xform","~:query-root","~:req-un","~:opt-un","~$x","~:remote","^1C","~:edn-query-language.core/join-query","^K","~:edn-query-language.core/recursion","^1D","~:mutate-key","^1E","^1F","~:ret","~:gfn","~:children","~:edn-query-language.core/join-key-param-expr","~:edn-query-language.ast/root","~:special","~:union-key","~$p1__45535#","^1I","~:pred-exprs","~:into","~:keys-pred","^1M","~:edn-query-language.ast/node","^1R","^1S","~:edn-query-language.core/ident","^5","~$p1__45538#","^1U","~:edn-query-language.core/mutation-expr","^1V","~:opt-keys","~:edn-query-language.core/recursion-depth","^1X","~:key","~:union-entry","^1Y","~:else","~:call","~:edn-query-language.core/special-property","~$cljs.spec.alpha/and","~:edn-query-language.core/ident-value","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~$cljs.core/->","^24","~:cljs.spec.alpha/kind-form","~:default","~:qb","~:property","^M","^J","~:edn-query-language.core/union","~:mutation-join","~$*","~:req-specs","~$cljs.spec.alpha/or","^6","~:conform-keys","^:","~:unbounded","~:edn-query-language.ast/dispatch-key","~:params","~$cljs.spec.alpha/fspec","~:ast","^2>","~$cljs.spec.alpha/nilable","~:type","~:edn-query-language.core/query","~$cljs.spec.alpha/tuple","^2A","~$p1__45541#","~:edn-query-language.core/var","^2B","~:sub-query","^2D","~:cljs.spec.alpha/cpred","~:node","~$p1__45540#","~:component","~:mutation","~$if","~:error/invalid-join","~$%","~:edn-query-language.ast/query","~:sym","^2M","^8","~:error/invalid-expression","~:edn-query-language.core/join","~$cljs.spec.alpha/keys","~$p1__45536#","~:edn-query-language.ast/children","~:edn-query-language.ast/union-key","~:req","~:recursion","^7","~:edn-query-language.core/param-expr","~:expr","~$fn*","~:root","~:qa","~:prop","~:min-count","^7;","^2Z","~:kind","~$cljs.spec.alpha/map-of","~:count","~:req-keys","~:ident","~$cljs.core/fn","~:dispatch-key","~:opt-specs","~:edn-query-language.core/property","^9","~:pred-forms","~:f","~:param-exp","~:depth","~:x","~:edn-query-language.core/join-key-param-key","~:edn-query-language.core/params","~:cljs.spec.alpha/kfn","~:target","^38","^5G","^3:","~$cljs.spec.alpha/multi-spec","^5F","~:query","~:edn-query-language.ast/type","~:hierarchy","~:union","~:edn-query-language.core/param-expr-key","~:edn-query-language.core/mutation-key","~$...","^5H","^3>","~:edn-query-language.core/mutation","^3?","^3@","^3A","~:edn-query-language.ast/key","^3B","~:cljs.spec.alpha/conform-all","~:edn-query-language.core/query-expr","~:test","^3E","^3H","~:join","~:edn-query-language.core/join-key","~:edn-query-language.core/mutation-join","~:cljs.spec.alpha/describe","~:opt","~$cljs.spec.alpha/?"]],"~:order",["^9J","^1I","^8;","^5G","~$*","^8=","^3H","^82","^8R","^:4","^8H","^9@","^9F","^9L","^7U","^94","^9C","^7O","^9D","^8I","^7[","^8A","^8V","^9B","^9P","^:0","^:6","^2D","^8E","^8Q","^9A","^86","^2Z","^7P","^9M","^8J","^9Y","^9S","^9V","^9:","^9O","^9W","^:3","^9;","^8<","^3A","^8?","^9<","^8L","^:8","^9N","^9X","^3:","^84","^7Q","^:5","^9Z","^8Z","^8F","^:1","^7W","^8>","^1S","^91","^9[","^92","^8K","^98","^97","^81","^7V","^95","^7L","^9T","^9=","^7Y","^1U","^9>","^8P","^9G","~$x","^3E","^1C","^96","^2B","^8:","^7T","~$%","^7M","^7S","^7Z","^80","^85","^8G","^99","^9E","^9I","^9K","^:7","^9U","^8B","^87","^9H","^8[","^8@","^3?","^83","^88","^8X","^7X","^8S","^2>","^1V","^1F","^24","^9R","^M","^J","^6","^:","^8","^7","^9","^5F","^5H","^:2","^K","^7;","^5","^8Y","^9Q","^7N","^7K","^89","^90","^93","^8T","^1M","^8M","^7H","^8O","^7R","^1R","^3@","^8N","^1Y","~:x","^1D","^3B","^8U","^38","^7J","^2M","^8W","^3>","^2A","^8D","~:f","^7I","^1X","^9?","^8C","^1E"]],"^10",["^ ","^S",["^H",[]]],"^11",["^ "],"^12",["^Q","^P","^?"]],"^M","^K","~:ns-specs",["^ ","^7O",["^W",["^8H","^9S","^8Q","^9V","^8E","^9:","^7P"]],"^7P",["^W",["^8H","^9M","^86","^8J",["^H",[["^W",["^5G","^9Y"]]]]]],"^1E",["^W",["^8M","^7H",["^W",["^8?","^9?",["^W",["^8O","^8Q"]],"^8C",["^W",["^8O","^8Q"]]]],"^7R",["^W",["^8O","^8Q"]]]],"^7U",["^W",["^8<","^3A",["^W",["^8?","^9<","^9N","^8L",["^W",["^:8","^9O"]]]]]],"^1M",["^W",["^8M","^7H",["^W",["^8?","^9S",["^W",["^8O","^8Q"]]]],"^7R","^7V"]],"^1R",["^W",["^8M","^7H",["^W",["^8?","^9S","^8Q"]],"^7R",["^W",["^8O","^81"]]]],"^82",["^W",["^8R","^9J","^8="]],"^84",["^W",["^8<","^3A",["^W",["^8?","^7Q","^9X","^8L",["^W",["^:8","^9O"]]]]]],"^86","^2Z","^1X",["^W",["^8M","^7H",["^W",["^8?","^9?","^81","^8C","^81"]],"^7R",["^W",["^8O","^81"]]]],"^1Y",["^W",["^8M","^7H",["^W",["^8?","~:x","^3H"]],"^7R","^1D"]],"^8;",["^H",[["^W",["^5G","~$*"]]]],"^8=","^3H","^8E",["^W",["^9C","^9J","^8Q","^9A",1,"^8I",true]],"^8Q",["^W",["^8>","^:1","^9B","^1S"]],"^2A",["^W",["^8M","^7H",["^W",["^8?","~:x",["^W",["^8H","^8D","^9J","^9<","^9;"]],"~:f","^2M","^7H",["^W",["^7I","^3H"]]]],"^7R","^9;"]],"^94",["^W",["^9C","^:4","^7O","^9D",1,"^8I",true]],"^9;",["^W",["^8<","^3A",["^W",["^8?","^9<","^9W","^8L",["^W",["^:8","^9O"]]]]]],"^9J","^1I","^9N",["^W",["^8H","^9@","^9J","^9F","^82"]],"^9O","^2D","^38",["^W",["^8M","^7H",["^W",["^8?","^7J","^2M","^8W","^81"]],"^7R","^81"]],"^9W",["^W",["^8H","^9@","^9J","^:3","^94","^9F","^82"]],"^9X","^3:","^3>",["^W",["^8M","^7H",["^W",["^8?","^8N","^81"]],"^7R","^1D"]],"^9Z",["^W",["^8H","^8Z","^84","^8F","^:5"]],"^3@",["^W",["^8M","^7H",["^W",["^8?","^8N","^81"]],"^7R","^8Q"]],"^3B",["^W",["^8M","^7H",["^W",["^8?","^9S","^8Q","^8U","^8Q"]],"^7R","^8Q"]],"^:1",["^W",["^8H","^9@","^9J","^:3","^94","^9F","^82","^8Z","^9Z","^9L","^9;","^7W","^8;"]],"^:4",["^W",["^8H","^9@","^9J","^9F","^82","^9L","^7U"]],"^:5",["^W",["^9C","^84","^8Q","^9D",1,"^8I",true]]],"~:ns-spec-vars",["^H",["^1E","^1M","^1R","^1X","^1Y","^2A","^38","^3>","^3@","^3B"]],"~:compiler-options",["^3K",[["^:<","~:static-fns"],true,["^:<","~:shadow-tweaks"],null,["^:<","~:source-map-inline"],null,["^:<","~:elide-asserts"],false,["^:<","~:optimize-constants"],null,["^:<","^17"],null,["^:<","~:external-config"],null,["^:<","~:tooling-config"],null,["^:<","~:emit-constants"],null,["^:<","~:load-tests"],null,["^:<","~:form-size-threshold"],null,["^:<","~:data-readers"],null,["^:<","~:infer-externs"],"~:auto",["^:<","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:<","~:fn-invoke-direct"],null,["^:<","~:source-map"],"/dev/null"]]]